<% layout("/layouts/boilerplate") %>
<style>
:root {
  --primary-gradient: linear-gradient(90deg, #00d8ff, #008cff);
  --primary-gradient-hover: linear-gradient(90deg, #00c8ee, #007cee);
  --secondary-gradient: linear-gradient(90deg, #ff7b00, #ff008c);
  --card-bg: #ffffff;
  --card-shadow: 0 10px 30px -15px rgba(0, 136, 255, 0.3);
  --text-primary: #2d3436;
  --text-secondary: #636e72;
  --border-color: rgba(0, 136, 255, 0.1);
  --success-color: #00d8ff;
}

/* Base Styles */
body {
  background-color: #f8faff;
  color: var(--text-primary);
}

h2 {
  color: var(--text-primary);
  font-weight: 700;
  margin-bottom: 2rem;
  position: relative;
  display: inline-block;
  margin-left: 25rem;
}

h2::after {
  content: '';
  position: absolute;
  bottom: -8px;
  left: 0;
  width: 60px;
  height: 4px;
  background: var(--primary-gradient);
  border-radius: 2px;
}

/* Project Creation Section */
.create-project {
  margin-bottom: 3rem;
  position: relative;
}

.create-project .btn-primary {
  background: var(--primary-gradient);
  border: none;
  border-radius: 50px;
  padding: 14px 28px;
  font-weight: 600;
  letter-spacing: 0.5px;
  box-shadow: 0 4px 20px rgba(0, 136, 255, 0.2);
  transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
  position: relative;
  overflow: hidden;
  z-index: 1;
  margin-left: 37.5rem;
}

.create-project .btn-primary:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 25px rgba(0, 136, 255, 0.3);
  background: var(--primary-gradient-hover);
}

.create-project .btn-primary::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, rgba(255,255,255,0.2), transparent);
  transform: translateX(-100%);
  transition: transform 0.6s ease;
  z-index: -1;
}

.create-project .btn-primary:hover::before {
  transform: translateX(0);
}

/* Project Form */
#projectForm {
  transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

#projectForm .card {
  border: none;
  border-radius: 16px;
  box-shadow: var(--card-shadow);
  background: var(--card-bg);
  overflow: hidden;
  transform: translateY(10px);
  opacity: 0;
  transition: all 0.4s ease;
}

#projectForm.show .card {
  transform: translateY(0);
  opacity: 1;
}

#projectForm .card-body {
  padding: 2.5rem;
}

#projectForm .form-label {
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 0.75rem;
  display: block;
}

#projectForm .form-control {
  background-color: rgba(0, 136, 255, 0.05);
  border: 1px solid var(--border-color);
  border-radius: 10px;
  padding: 14px 18px;
  color: var(--text-primary);
  transition: all 0.3s ease;
  font-size: 1rem;
}

#projectForm .form-control:focus {
  border-color: rgba(0, 136, 255, 0.3);
  box-shadow: 0 0 0 4px rgba(0, 136, 255, 0.1);
  background-color: rgb(0, 31, 46);
}

#projectForm textarea.form-control {
  min-height: 140px;
  resize: vertical;
}

#projectForm .btn-success {
  background: var(--secondary-gradient);
  border: none;
  border-radius: 10px;
  padding: 14px 28px;
  font-weight: 600;
  letter-spacing: 0.5px;
  transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
  width: 100%;
  margin-top: 1.5rem;
  position: relative;
  overflow: hidden;
  z-index: 1;
}

#projectForm .btn-success:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 25px rgba(255, 0, 140, 0.3);
}

#projectForm .btn-success::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, rgba(255,255,255,0.2), transparent);
  transform: translateX(-100%);
  transition: transform 0.6s ease;
  z-index: -1;
}

#projectForm .btn-success:hover::after {
  transform: translateX(0);
}

/* Project List */
.project-list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));
  gap: 30px;
  margin: 3rem 0;
}

.project-card {
  background: var(--card-bg);
  border-radius: 16px;
  box-shadow: var(--card-shadow);
  padding: 28px;
  transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
  border: 1px solid rgba(0, 136, 255, 0.1);
  position: relative;
  overflow: hidden;
}

.project-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 4px;
  height: 100%;
  background: var(--primary-gradient);
  transition: width 0.4s ease;
}

.project-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 35px -10px rgba(0, 136, 255, 0.3);
}

.project-card:hover::before {
  width: 8px;
}

.project-card h4 {
  color: var(--text-primary);
  font-weight: 700;
  margin-bottom: 1rem;
  font-size: 1.4rem;
}

.project-card p {
  color: var(--text-secondary);
  margin-bottom: 1.25rem;
  line-height: 1.6;
}

.project-card .tags {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  margin-bottom: 1.5rem;
}

.project-card .tag {
  background: rgba(21, 76, 124, 0.1);
  color: #0088ff;
  padding: 4px 12px;
  border-radius: 50px;
  font-size: 0.8rem;
  font-weight: 500;
}

.project-card .owner {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 1.5rem;
}

.project-card .owner-avatar {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background: var(--primary-gradient);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: bold;
}

/* Buttons in Project Cards */
.project-card .btn {
  border: none;
  border-radius: 8px;
  padding: 8px 16px;
  font-weight: 600;
  font-size: 0.9rem;
  transition: all 0.3s ease;
  cursor: pointer;
}

.project-card .btn-request {
  background: var(--primary-gradient);
  color: white;
  margin-top: 1rem;
}

.project-card .btn-request:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(0, 136, 255, 0.3);
}

.project-card .btn-action {
  background: rgba(0, 136, 255, 0.1);
  color: #0088ff;
  margin-right: 8px;
}

.project-card .btn-action:hover {
  background: rgba(0, 136, 255, 0.2);
}

/* Status Messages */
.project-card .status-message {
  padding: 8px 12px;
  border-radius: 8px;
  font-size: 0.9rem;
  font-weight: 500;
  margin-top: 1rem;
}

.project-card .status-creator {
  background: rgba(0, 216, 255, 0.1);
  color: #00d8ff;
}

.project-card .status-member {
  background: rgba(0, 184, 148, 0.1);
  color: #00b894;
}

/* Team Members Section */
.team-members {
  margin-top: 1.5rem;
  padding-top: 1.5rem;
  border-top: 1px solid rgba(0, 136, 255, 0.1);
}

.team-members h5 {
  font-size: 1rem;
  margin-bottom: 1rem;
  color: var(--text-primary);
}

.member-list {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.member-avatar {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background: rgba(0, 136, 255, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
  color: #0088ff;
  font-size: 0.8rem;
  font-weight: bold;
}

/* Animations */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.project-card {
  animation: fadeIn 0.6s ease forwards;
  opacity: 0;
}

.project-card:nth-child(1) { animation-delay: 0.1s; }
.project-card:nth-child(2) { animation-delay: 0.2s; }
.project-card:nth-child(3) { animation-delay: 0.3s; }
.project-card:nth-child(4) { animation-delay: 0.4s; }
.project-card:nth-child(5) { animation-delay: 0.5s; }

/* Responsive Design */
@media (max-width: 768px) {
  .project-list {
    grid-template-columns: 1fr;
  }
  
  #projectForm .card-body {
    padding: 1.75rem;
  }
  
  .create-project .btn-primary {
    width: 100%;
  }
}

/* JavaScript Helper Class */
.show {
  display: block !important;
}
:root {
  /* Primary gradients */
  --primary-gradient: linear-gradient(90deg, #00d8ff, #008cff);
  --primary-gradient-hover: linear-gradient(90deg, #00c8ee, #007cee);
  --secondary-gradient: linear-gradient(90deg, #ff7b00, #ff008c);

  /* Colors */
  --primary: #00d8ff;
  --secondary: #008cff;
  --accent: #47c2ff;
  --success: #50fa7b;
  --text: #e2f3ff;
  --text-muted: #5d7a9d;
  --text-primary: #e2f3ff;
  --text-secondary: #ffffff;

  /* Backgrounds */
  --dark-bg: #0a0e17;
  --darker-bg: #050a14;
  --card-bg: #090a0a;

  /* Effects */
  --card-shadow: 0 10px 30px -15px rgba(0, 136, 255, 0.3);
  --border-color: rgba(0, 136, 255, 0.2);
}

/* Base Styles */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

body {
  font-family: 'Poppins', sans-serif;
  text-align: center;
    padding: 4rem 1rem;
    background: var(--dark-bg);
    position: relative;
    overflow: hidden;
}


html, body {
  height: 100%;
  overflow-y: auto;
}/* Works for most modern browsers */
body {
  overflow: auto; /* Allow scrolling */
  scrollbar-width: none; /* Firefox */
}

/* Chrome, Edge, Safari */
body::-webkit-scrollbar {
  display: none; /* Hide scrollbar */
}

.modal-content {
  border-radius: 15px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  border: none;
    border-color: #ffffff;
}

.modal-header {
  background-color: #112a5e;
  color: white;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
    border-color: #000;
}

.modal-title  {
  font-weight: bold;
  text-align: center;
  
}


.modal-body {
  color: white;
  padding: 2rem;
  background-color: #141313;
}

.modal-footer {

  background-color:  #141313;
  border-bottom-left-radius: 15px;
  border-bottom-right-radius: 15px;
  border-color: #000;
}

.form-label {
  font-weight: 500;
}

.form-control {
  border-radius: 10px;
  box-shadow: none;
  transition: border-color 0.2s ease-in-out;
}

.form-control:focus {
  border-color: #0d6efd;
  box-shadow: 0 0 0 0.15rem rgba(13, 110, 253, 0.25);
}

.btn-primary {
  border-radius: 8px;
  padding: 0.4rem 1.2rem;
  font-weight: 500;
}

.btn-secondary {
  border-radius: 8px;
  padding: 0.4rem 1.2rem;
}
.btn-close{
  color: white;
}
.modal-content {
    background: var(--card-bg);
    border: none;
    border-radius: 12px;
    box-shadow: 0 10px 25px rgba(0, 140, 255, 0.2);
    overflow: hidden;
  }

  .modal-header {
    border-bottom: 1px solid rgba(0, 216, 255, 0.2);
    background: linear-gradient(90deg, rgba(30, 193, 222, 0.1), rgba(0, 140, 255, 0.1));
    padding: 1.2rem 1.5rem;
  }

  .modal-title {
    font-weight: 600;
    letter-spacing: 0.5px;
    background: linear-gradient(90deg, var(--primary), var(--secondary));
    -webkit-background-clip: text;
    background-clip: text;
    color: white;
    text-shadow: 0 2px 10px rgba(0, 216, 255, 0.3);
  }

  .btn-close.btn-close-white {
    filter: invert(1) sepia(1) saturate(5) hue-rotate(175deg);
    opacity: 0.8;
    transition: all 0.3s ease;
  }

  .btn-close.btn-close-white:hover {
    opacity: 1;
    transform: rotate(90deg);
  }

  .modal-body {
    padding: 1.5rem;
  }

  /* Form Elements */
  .form-control {
    background-color: rgba(26, 34, 56, 0.7);
    border: 1px solid rgba(0, 216, 255, 0.3);
    color: white;
    border-radius: 8px;
    padding: 0.75rem 1rem;
    transition: all 0.3s ease;
  }

  .form-control:focus {
    background-color: rgba(26, 34, 56, 0.9);
    border-color: var(--primary);
    box-shadow: 0 0 0 0.25rem rgba(0, 216, 255, 0.2);
    color: white;
  }

  .form-label {
    color: white;
    font-weight: 500;
    margin-bottom: 0.5rem;
    display: block;
  }

  /* Buttons */
  .modal-footer {
    border-top: 1px solid rgba(0, 216, 255, 0.2);
    padding: 1rem 1.5rem;
  }

  .btn-secondary {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: white;
  }

  .btn-secondary:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.2);
  }

  .btn-primary {
    background: linear-gradient(90deg, var(--primary), var(--secondary));
    border: none;
    font-weight: 600;
    letter-spacing: 0.5px;
    padding: 0.6rem 1.25rem;
    position: relative;
    overflow: hidden;
    z-index: 1;
  }

  .btn-primary::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, var(--secondary), var(--primary));
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
  }

  .btn-primary:hover::before {
    opacity: 1;
  }

  /* Chat Modal Specific Styles */
  #chatModal .modal-content {
    border: 1px solid rgba(0, 216, 255, 0.3);
  }

  #chatWindow {
    padding: 0.5rem;
    scrollbar-width: thin;
    scrollbar-color: var(--primary) transparent;
  }

  #chatWindow::-webkit-scrollbar {
    width: 6px;
  }

  #chatWindow::-webkit-scrollbar-thumb {
    background-color: var(--primary);
    border-radius: 3px;
  }

  .chat-message {
    background: rgba(0, 216, 255, 0.1);
    border-left: 3px solid var(--primary);
    border-radius: 0 8px 8px 0;
    padding: 0.75rem 1rem;
    margin-bottom: 0.75rem;
    animation: fadeIn 0.3s ease-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(5px); }
    to { opacity: 1; transform: translateY(0); }
  }

  /* Input Group */
  .input-group {
    border-radius: 8px;
    overflow: hidden;
  }

  .input-group .form-control :placeholder-shown {
    border-radius: 8px 0 0 8px;
    border-right: none;
    color:white;
  }

  .input-group .btn {
    border-radius: 0 8px 8px 0;
  }

  /* Responsive Adjustments */
  @media (max-width: 768px) {
    .modal-dialog {
      margin: 0.5rem;
    }
    
    .modal-content {
      border-radius: 8px;
    }
  }
  .form-control::placeholder {
  color: rgba(255, 255, 255, 0.7) !important; /* Semi-transparent white */
  opacity: 1; /* Ensure full visibility */
}

/* For better browser compatibility */
.form-control::-webkit-input-placeholder { /* Chrome/Edge/Safari */
  color: rgba(255, 255, 255, 0.7) !important;
}
.form-control::-moz-placeholder { /* Firefox 19+ */
  color: rgba(255, 255, 255, 0.7) !important;
  opacity: 1;
}
.form-control:-ms-input-placeholder { /* IE 10-11 */
  color: rgba(255, 255, 255, 0.7) !important;
}
.form-control:-moz-placeholder { /* Firefox 18- */
  color: rgba(255, 255, 255, 0.7) !important;
  opacity: 1;
}
.message strong{
    color:#00d8ff;
}
.back-btn {
      padding: 0.8rem 1.5rem;
      background: rgb(38, 204, 230);
      color: white;
      font-weight: 600;
      border: 1px solid var(--primary);
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.3s ease;
      margin: 1rem auto;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
     margin-right: 75rem;
     margin-top: 2rem;
    }

    .back-btn:hover {
      background: rgba(0, 208, 255, 0.3);
      transform: translateX(-5px);
    }
    :root {
    --primary-gradient: linear-gradient(90deg, #00d8ff, #008cff);
    --primary-gradient-hover: linear-gradient(90deg, #00c4e8, #0078d4);
    --dark-bg: #121212;
    --text-primary: #ffffff;
  }

  .collab-intro {
    text-align: center;
    padding: 4rem 1rem;
    background: var(--dark-bg);
    position: relative;
    overflow: hidden;
    margin-top: -1rem;
     
 
  }

  .collab-intro::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at center, rgba(0,216,255,0.1) 0%, transparent 70%);
    z-index: 0;
  }

  .collab-headline {
    font-size: 6rem;
    font-weight: 800;
    margin-bottom: 2rem;
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    position: relative;
    z-index: 1;
  }

  .collab-text-part {
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    display: inline-block;
    transform: translateY(50px);
    opacity: 0;
    animation: letterDrop 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
  }

  @keyframes letterDrop {
    0% {
      transform: translateY(-50px);
      opacity: 0;
      text-shadow: 0 10px 20px rgba(0,216,255,0.5);
    }
    100% {
      transform: translateY(0);
      opacity: 1;
      text-shadow: 0 2px 10px rgba(0,216,255,0.3);
    }
  }

  /* Stagger the letter animations */
  .collab-text-part:nth-child(1) { animation-delay: 0.1s; }
  .collab-text-part:nth-child(2) { animation-delay: 0.2s; }
  .collab-text-part:nth-child(3) { animation-delay: 0.3s; }
  .collab-text-part:nth-child(4) { animation-delay: 0.4s; }
  .collab-text-part:nth-child(5) { animation-delay: 0.5s; }
  .collab-text-part:nth-child(6) { animation-delay: 0.6s; }

  .tagline-container {
    position: relative;
    z-index: 1;
    height: 4rem;
    overflow: hidden;
  }

  .tagline {
    font-size: 2.5rem;
    font-weight: 600;
    margin-bottom: 1rem;
    opacity: 0;
    transform: translateX(-50px);
    position: absolute;
    width: 100%;
    animation: taglineSlide 12s infinite;
  }

  .tagline:nth-child(1) { animation-delay: 1s; }
  .tagline:nth-child(2) { animation-delay: 5s; }
  .tagline:nth-child(3) { animation-delay: 9s; }

  @keyframes taglineSlide {
    0% {
      opacity: 0;
      transform: translateX(-50px);
    }
    10% {
      opacity: 1;
      transform: translateX(0);
    }
    30% {
      opacity: 1;
      transform: translateX(0);
    }
    40% {
      opacity: 0;
      transform: translateX(50px);
    }
    100% {
      opacity: 0;
      transform: translateX(50px);
    }
  }

  .highlight {
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-weight: 700;
  }

  /* Floating particles */
  .particle {
    position: absolute;
    background: var(--primary-gradient);
    border-radius: 50%;
    opacity: 0;
    animation: floatParticle 15s linear infinite;
  }

  @keyframes floatParticle {
    0% {
      transform: translateY(100vh) translateX(0);
      opacity: 0;
    }
    10% {
      opacity: 0.3;
    }
    90% {
      opacity: 0.3;
    }
    100% {
      transform: translateY(-100px) translateX(100px);
      opacity: 0;
    }
  }

  /* Responsive adjustments */
  @media (max-width: 900x) {
    .collab-headline {
      font-size: 4rem;
    }
    .tagline {
      font-size: 1.8rem;
    }
  }
  .create{
    margin-right: 36rem;
    margin-top: 3rem;
    border-radius: 9px;
  }
  @media (max-width: 768px) {
  /* Base adjustments */
  body {
    padding: 1rem;
  }

  .collab-intro {
    padding: 2rem 0.5rem;
    margin-top: 0;
  }

  /* Headline adjustments */
  .collab-headline {
    font-size: 5rem;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.2rem;
    margin-bottom: 1rem;
  }

  .collab-text-part {
    animation: none;
    transform: none;
    opacity: 1;
  }

  /* Tagline adjustments */
  .tagline-container {
    height: auto;
    margin: 1rem 0;
  }

  .tagline {
    position: static;
    font-size: 1.2rem;
    animation: none;
    transform: none;
    opacity: 1;
    margin: 0.5rem 0;
    display: block;
  }

  .tagline:nth-child(n+2) {
    display: none; /* Show only first tagline on mobile */
  }

  /* Back button adjustments */
  .back-btn {
    margin-top: 60px;
    width: 100%;
    padding: 0.6rem;
    font-size: 0.9rem;
  }

  /* Form adjustments */
  .create {
    margin: 1rem 0;
    width: 100%;
    padding: 0.8rem;
  }

  #projectForm .card-body {
    padding: 1rem;
  }

  /* Project list adjustments */
  .project-list {
    grid-template-columns: 1fr;
    gap: 20px;
    margin: 1.5rem 0;
  }

  .project-card {
    padding: 1.2rem;
  }

  .project-card h4 {
    font-size: 1.2rem;
  }

  /* Team members section */
  .team-members {
    margin-top: 1rem;
    padding-top: 1rem;
  }

  .member-list {
    gap: 6px;
  }

  .member-avatar {
    width: 28px;
    height: 28px;
    font-size: 0.7rem;
  }

  /* Buttons */
  .btn-request, 
  .btn-action {
    padding: 0.5rem 0.8rem;
    font-size: 0.8rem;
  }

  /* Chat modal adjustments */
  .modal-dialog {
    margin: 0.5rem;
  }

  .modal-content {
    border-radius: 8px;
  }

  #chatMessages {
    max-height: 50vh;
  }

  /* Hide some elements on very small screens */
  @media (max-width: 400px) {
    .collab-headline {
      font-size: 4rem;
    }
    
    .project-card .tags {
      display: none;
    }
  }

  /* Improved form input sizes */
  .form-control {
    font-size: 16px; /* Prevent zoom on iOS */
    padding: 0.8rem;
  }

  /* Better spacing for form elements */
  .mb-3 {
    margin-bottom: 1rem !important;
  }

  /* Adjust owner section */
  .owner {
    margin-bottom: 1rem;
  }

  /* Make status messages more compact */
  .status-message {
    padding: 0.5rem;
    font-size: 0.8rem;
    margin-top: 0.5rem;
  }
}

/* Additional mobile-specific improvements */
@media (max-width: 768px) {
  /* Better touch targets */
  button, .btn, [role="button"] {
    min-height: 44px; /* Apple recommended minimum touch target */
  }

  /* Prevent horizontal scrolling */
  html, body {
    overflow-x: hidden;
    width: 100%;
  }

  /* Improve modal usability */
  .modal-body {
    padding: 1rem;
  }

  /* Adjust chat input */
  #chatInput {
    min-height: 80px;
  }

  /* Make project cards more compact */
  .project-card p {
    font-size: 0.9rem;
    margin-bottom: 0.8rem;
  }

  /* Better form label spacing */
  .form-label {
    margin-bottom: 0.3rem;
  }
}

/* Very small devices (phones, 360px and down) */
@media (max-width: 900px) {
  .collab-headline {
    font-size: 1.8rem;
  }

  .tagline {
    font-size: 1rem;
  }

  .project-card {
    padding: 1rem;
  }

  .project-card h4 {
    font-size: 1.1rem;
  }
}
   
</style>
<button class="back-btn" onclick="window.location.href='/'">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
      <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
    </svg>
   Back To Home
  </button>
<div class="collab-intro">

<!-- Create Project Button & Form -->

  <div class="collab-headline">
    <span class="collab-text-part">P</span>
    <span class="collab-text-part">R</span>
    <span class="collab-text-part">O</span>
    <span class="collab-text-part">J</span>
    <span class="collab-text-part">E</span>
    <span class="collab-text-part">C</span>
    <span class="collab-text-part">T</span>
    &nbsp;  &nbsp;  
    <span class="collab-text-part">C</span>
    <span class="collab-text-part">O</span>
    <span class="collab-text-part">L</span>
    <span class="collab-text-part">L</span>
    <span class="collab-text-part">A</span>
    <span class="collab-text-part">B</span>
  </div>
  <div class="tagline-container">
    <div class="tagline">Where Ideas <span class="highlight">Merge</span></div>
    <div class="tagline">Creativity <span class="highlight">Multiplies</span></div>
    <div class="tagline">Build <span class="highlight">Together</span></div>
  </div>



<!-- Create Project Button & Form -->
<% if (user) { %>
  <div class="create-project mb-4">
    <button class="btn btn-primary create" data-bs-toggle="collapse" data-bs-target="#projectForm">Create New Project</button>
    
    <div class="collapse mt-3" id="projectForm">
      <form method="POST" action="/collab/submit" class="card card-body">
        <div class="mb-3">
          <label class="form-label">Project Title</label>
          <input type="text" name="title" class="form-control" required>
        </div>
        <div class="mb-3">
          <label class="form-label">Description</label>
          <textarea name="description" class="form-control" rows="3" required></textarea>
        </div>
        <div class="mb-3">
          <label class="form-label">Tags (comma-separated)</label>
          <input type="text" name="tags" class="form-control" required>
        </div>
        <div class="mb-3">
          <label class="form-label">Team Size</label>
          <input type="number" name="teamSize" class="form-control" required min="1">
        </div>
        <button type="submit" class="btn btn-success">Submit Project</button>
      </form>
    </div>
  </div>
<% } %>

<div class="project-list">
  <% projects.forEach((p, index) => { %>
    <% const isTeamFull = p.teamMembers.length >= p.teamSize; %>
    <div class="project-card">
      <h4><%= p.title %></h4>
      <p><%= p.description %></p>

      <div class="tags">
        <% p.tags.forEach(tag => { %>
          <span class="tag"><%= tag %></span>
        <% }) %>
      </div>

     <% if (p.creator) { %>
  <div class="owner">
    <div class="owner-avatar"><%= p.creator.username.charAt(0).toUpperCase() %></div>
    <span>Created by <%= p.creator.username %></span>
  </div>
<% } else { %>
  <div class="owner">
    <div class="owner-avatar">?</div>
    <span>Creator unknown</span>
  </div>
<% } %>


      <!-- Show Join Button or Status -->
      <% if (user && p.creator && user._id.toString() !== p.creator._id.toString()) { %>
        <% if (isTeamFull) { %>
          <div class="status-message status-full">Team Full</div>
        <% } else if (
          !p.joinRequests.some(u => u._id.toString() === user._id.toString()) &&
          !p.teamMembers.some(u => u._id.toString() === user._id.toString())
        ) { %>
          <form method="POST" action="/collab/join/<%= p._id %>">
            <button type="submit" class="btn btn-request">Request to Join</button>
          </form>
        <% } else { %>
          <div class="status-message status-member">
            You're <%= p.teamMembers.some(u => u._id.toString() === user._id.toString()) ? 'a team member' : 'already requested' %>
          </div>
        <% } %>
      <% } else if (user) { %>
        <div class="status-message status-creator">You are the project creator</div>
      <% } %>

      <!-- Join Requests for Creator -->
      <% if (user && p.creator && user._id.toString() === p.creator._id.toString()) { %>
        <div class="team-members">
          <h5>Join Requests</h5>
          <% if (p.joinRequests.length === 0) { %>
            <p>No requests yet.</p>
          <% } else { %>
            <% p.joinRequests.forEach(reqUser => { %>
              <form method="POST" action="/collab/handle-request/<%= p._id %>/<%= reqUser._id %>" class="d-inline">
                <span><%= reqUser.username %></span>&nbsp;&nbsp;
                <button name="action" value="accept" class="btn btn-action">Accept</button>
                <button name="action" value="reject" class="btn btn-action">Reject</button><br><br>
              </form>
            <% }) %>
          <% } %>
        </div>
      <% } %>

      <!-- Team Members Display -->
      <% if (p.teamMembers.length > 0) { %>
        <div class="team-members">
          <h5>Team Members (<%= p.teamMembers.length %> / <%= p.teamSize %>)</h5>
          <div class="member-list">
            <% p.teamMembers.forEach(member => { %>
              <div class="member-avatar" title="<%= member.username %>">
                <%= member.username.charAt(0).toUpperCase() %>
              </div>
            <% }) %>
          </div>
        </div>
      <% } %>

      <!-- Team Chat Box -->
     <% if (isTeamFull && user && (p.creator._id.toString() === user._id.toString() || p.teamMembers.some(u => u._id.toString() === user._id.toString()))) { %>
  <button 
    class="btn btn-outline-primary mt-2 open-chat-btn" 
    data-bs-toggle="modal" 
    data-bs-target="#chatModal" 
    data-project-id="<%= p._id %>" 
    data-project-title="<%= p.title %>">
    Open Team Chat
  </button>
<% } %>


    </div>
  <% }); %>
</div>
<!-- Chat Modal -->
<div class="modal fade" id="chatModal" tabindex="-1" aria-labelledby="chatModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="chatModalLabel">Team Chat</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div id="chatMessages" class="mb-3" style="max-height: 300px; overflow-y: auto;">
          <!-- Messages will be loaded here dynamically -->
        </div>
        <form id="chatForm">
          <textarea id="chatInput" class="form-control mb-2" rows="2" placeholder="Type your message..."></textarea>
          <button type="submit" class="btn btn-primary">Send</button>
        </form>
      </div>
    </div>
  </div>
</div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
  // Form collapse logic
  const projectForm = document.getElementById('projectForm');
  if (projectForm) {
    projectForm.addEventListener('shown.bs.collapse', function () {
      this.classList.add('show');
    });
    projectForm.addEventListener('hidden.bs.collapse', function () {
      this.classList.remove('show');
    });
  }

  // Chat logic
  const chatMessages = document.getElementById('chatMessages');
  const chatForm = document.getElementById('chatForm');
  const chatInput = document.getElementById('chatInput');
  let currentProjectId = null;

  document.querySelectorAll('.open-chat-btn').forEach(btn => {
    btn.addEventListener('click', async () => {
      currentProjectId = btn.dataset.projectId;
      document.getElementById('chatModalLabel').innerText = `Team Chat - ${btn.dataset.projectTitle}`;

      try {
        const res = await fetch(`/collabmessage/chat/${currentProjectId}`);
        if (!res.ok) throw new Error('Failed to load messages');
        
        const data = await res.json();
        chatMessages.innerHTML = data.messages.map(msg => `
          <div class="message"><strong>${msg.user.username}:</strong> ${msg.text}</div>
        `).join('');
        chatMessages.scrollTop = chatMessages.scrollHeight;
      } catch (error) {
        console.error('Error loading messages:', error);
        chatMessages.innerHTML = '<div class="text-danger">Error loading messages</div>';
      }
    });
  });

  chatForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const text = chatInput.value.trim();
    if (!text) return;

    try {
      const res = await fetch(`/collabmessage/chat/${currentProjectId}`, {
        method: 'POST',
        headers: { 
          'Content-Type': 'application/json',
          // Add CSRF token if needed:
          // 'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        },
        body: JSON.stringify({ text })
      });

      if (!res.ok) throw new Error('Failed to send message');
      
      const newMsg = await res.json();
      chatMessages.innerHTML += `
        <div class="message"><strong>${newMsg.user.username}:</strong> ${newMsg.text}</div>
      `;
      chatInput.value = '';
      chatMessages.scrollTop = chatMessages.scrollHeight;
    } catch (error) {
      console.error('Error sending message:', error);
      alert('Failed to send message');
    }
  });
});


</script>
<script>
  // Create floating particles
  document.addEventListener('DOMContentLoaded', () => {
    const introSection = document.querySelector('.collab-intro');
    for (let i = 0; i < 20; i++) {
      const particle = document.createElement('div');
      particle.classList.add('particle');
      
      // Random properties
      const size = Math.random() * 10 + 5;
      const posX = Math.random() * 100;
      const delay = Math.random() * 15;
      const duration = Math.random() * 10 + 10;
      
      particle.style.width = `${size}px`;
      particle.style.height = `${size}px`;
      particle.style.left = `${posX}%`;
      particle.style.animationDelay = `${delay}s`;
      particle.style.animationDuration = `${duration}s`;
      
      introSection.appendChild(particle);
    }
  });
</script>
