<% layout("layouts/boilerplate") %>

<style>
  :root {
    --primary-gradient: linear-gradient(135deg, #00d8ff, #008cff);
    --primary-light: #00d8ff;
    --primary-dark: #008cff;
    --dark-bg: #0a0a0a;
    --darker-bg: #050505;
    --card-bg: #111111;
    --card-hover: #1a1a1a;
    --text-light: rgba(255, 255, 255, 0.95);
    --text-muted: rgba(255, 255, 255, 0.6);
    --text-dark: #121212;
    --success-color: #00ff88;
    --error-color: #ff3860;
    --border-radius: 12px;
    --box-shadow: 0 12px 24px rgba(0, 0, 0, 0.25);
    --box-shadow-hover: 0 16px 32px rgba(0, 216, 255, 0.15);
    --transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.1);
  }

  @font-face {
    font-family: 'Neon Absolute Sans';
    src: url('https://fonts.cdnfonts.com/css/neon-absolute-sans');
    font-weight: 400;
  }

  body {
    background-color: var(--dark-bg);
    color: var(--text-light);
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    margin: 0;
    padding: 0;
    min-height: 100vh;
    background-image: 
      radial-gradient(circle at 25% 25%, rgba(0, 216, 255, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 75% 75%, rgba(0, 140, 255, 0.1) 0%, transparent 50%);
    background-attachment: fixed;
  }

  .container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }

  /* Header Section with Neon Effect */
  .header {
    text-align: center;
    margin-bottom: 5rem;
    position: relative;
    overflow: hidden;
    padding: 2rem 0;
  }

  .header::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 120%;
    height: 300px;
    background: radial-gradient(circle, rgba(0, 216, 255, 0.15) 0%, transparent 70%);
    z-index: -1;
  }

  .header h1 {
    font-size: 6rem;
    margin: 0;
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-family: 'Neon Absolute Sans', sans-serif;
    letter-spacing: -2px;
    text-shadow: 0 0 10px rgba(0, 216, 255, 0.3);
    position: relative;
    display: inline-block;
  }

  .header h1::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 100%;
    height: 3px;
    background: var(--primary-gradient);
    border-radius: 3px;
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1);
  }

  .header h1:hover::after {
    transform: scaleX(1);
    transform-origin: left;
  }

  .header p {
    font-size: 1.4rem;
    color: var(--text-muted);
    max-width: 700px;
    margin: 1rem auto 0;
    line-height: 1.6;
  }

  /* Floating Search Form */
  .search-container {
    background: rgba(17, 17, 17, 0.8);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border-radius: var(--border-radius);
    padding: 2.5rem;
    margin-bottom: 4rem;
    box-shadow: var(--box-shadow);
    border: 1px solid rgba(255, 255, 255, 0.05);
    transition: var(--transition);
  }

  .search-container:hover {
    transform: translateY(-5px);
    box-shadow: var(--box-shadow-hover);
  }

  .search-container h2 {
    margin: 0 0 2rem 0;
    font-size: 1.8rem;
    font-weight: 600;
    color: var(--text-light);
    display: flex;
    align-items: center;
  }

  .search-container h2::before {
    content: '';
    display: inline-block;
    width: 30px;
    height: 3px;
    background: var(--primary-gradient);
    margin-right: 15px;
    border-radius: 3px;
  }

  /* Modern Form Elements */
  .single-line-form {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: flex-end;
  }

  .form-group {
    flex: 1;
    min-width: 200px;
    position: relative;
  }

  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--text-muted);
    font-size: 0.9rem;
    font-weight: 500;
  }

  .form-control {
    width: 100%;
    padding: 1rem 1.5rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--border-radius);
    color: var(--text-light);
    font-size: 1rem;
    transition: var(--transition);
  }

  .form-control:focus {
    outline: none;
    border-color: var(--primary-light);
    box-shadow: 0 0 0 3px rgba(0, 216, 255, 0.2);
    background: rgba(0, 216, 255, 0.05);
  }

  .form-control::placeholder {
    color: rgba(255, 255, 255, 0.3);
  }

  .btn {
    padding: 1rem 2rem;
    border-radius: var(--border-radius);
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: var(--transition);
    border: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  .btn-primary {
    background: var(--primary-gradient);
    color: var(--text-dark);
    position: relative;
    overflow: hidden;
  }

  .btn-primary::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1);
  }

  .btn-primary:hover::after {
    transform: translateX(0);
  }

  .btn-primary:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 140, 255, 0.3);
  }

  /* Action Cards */
  .action-card {
    background: var(--card-bg);
    border-radius: var(--border-radius);
    padding: 2rem;
    text-align: center;
    transition: var(--transition);
    height: 100%;
    border: 1px solid rgba(255, 255, 255, 0.05);
  }

  

  .action-card i {
    font-size: 3rem;
    margin-bottom: 1.5rem;
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  .action-card h3 {
    margin: 0 0 1rem 0;
    font-size: 1.5rem;
    font-weight: 600;
  }

  .action-card p {
    color: var(--text-muted);
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  /* Ride Cards - Futuristic Design */
  .rides-section {
    margin-top: 4rem;
  }

  .rides-section h2 {
    font-size: 2rem;
    margin-bottom: 2rem;
    position: relative;
    display: inline-block;
  }

  .rides-section h2::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 50%;
    height: 3px;
    background: var(--primary-gradient);
    border-radius: 3px;
  }

  .ride-card {
    background: var(--card-bg);
    border-radius: var(--border-radius);
    padding: 2rem;
    margin-bottom: 2rem;
    transition: var(--transition);
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(255, 255, 255, 0.05);
  }

  .ride-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 100%;
    background: var(--primary-gradient);
  }

  .ride-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--box-shadow-hover);
    background: var(--card-hover);
  }

  .ride-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .ride-route {
    font-size: 1.5rem;
    font-weight: 600;
    display: flex;
    align-items: center;
  }

  .ride-route i {
    margin: 0 1rem;
    color: var(--primary-light);
    font-size: 1.2rem;
  }

  .status-badge {
    padding: 0.5rem 1rem;
    border-radius: 50px;
    font-size: 0.8rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .status-available {
    background: rgba(0, 255, 136, 0.1);
    color: var(--success-color);
    border: 1px solid var(--success-color);
  }

  .status-full {
    background: rgba(255, 56, 96, 0.1);
    color: var(--error-color);
    border: 1px solid var(--error-color);
  }

  .ride-details {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .detail-item {
    display: flex;
    align-items: center;
  }

  .detail-item i {
    margin-right: 0.8rem;
    color: var(--primary-light);
    font-size: 1.2rem;
    width: 20px;
    text-align: center;
  }

  .btn-join {
    width: 100%;
    padding: 1rem;
    font-weight: 600;
    border-radius: var(--border-radius);
    background: var(--primary-gradient);
    color: var(--text-dark);
    transition: var(--transition);
  }

  .btn-join:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 140, 255, 0.3);
  }

  .btn-disabled {
    background: rgba(255, 255, 255, 0.05);
    color: var(--text-muted);
    cursor: not-allowed;
  }

  /* Empty State */
  .empty-state {
    text-align: center;
    padding: 4rem 2rem;
    background: rgba(255, 255, 255, 0.02);
    border-radius: var(--border-radius);
    border: 1px dashed rgba(255, 255, 255, 0.1);
  }

  .empty-state i {
    font-size: 3rem;
    color: var(--text-muted);
    margin-bottom: 1.5rem;
    opacity: 0.5;
  }

  .empty-state h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--text-light);
  }

  .empty-state p {
    color: var(--text-muted);
    max-width: 500px;
    margin: 0 auto 2rem;
    line-height: 1.6;
  }

  /* Floating Animation */
  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
  }

  .floating {
    animation: float 6s ease-in-out infinite;
  }

  /* Responsive Design */
  @media (max-width: 1200px) {
    .header h1 {
      font-size: 4.5rem;
    }
  }

  @media (max-width: 992px) {
    .header h1 {
      font-size: 3.5rem;
    }
    
    .ride-details {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 768px) {
    .container {
      padding: 1.5rem;
    }
    
    .header h1 {
      font-size: 2.5rem;
    }
    
    .header p {
      font-size: 1.1rem;
    }
    
    .search-container {
      padding: 1.5rem;
    }
    
    .form-group {
      min-width: 100%;
    }
    
    .ride-details {
      grid-template-columns: 1fr;
    }
  }

  /* Micro-interactions */
  .hover-grow {
    transition: transform 0.3s ease;
  }

  .hover-grow:hover {
    transform: scale(1.02);
  }

  /* Glow Effect */
  .glow {
    position: relative;
  }

  .glow::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    box-shadow: 0 0 15px rgba(0, 216, 255, 0.5);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .glow:hover::after {
    opacity: 1;
  }
  .single-line-form {
    display: flex;
    flex-wrap: nowrap;
    gap: 1rem;
    align-items: flex-end;
  }

  .form-group {
    margin-bottom: 0;
  }

  @media (max-width: 992px) {
    .single-line-form {
      flex-wrap: wrap;
    }
    .form-group {
      flex: 1 0 100% !important;
    }
  }

  @media (max-width: 768px) {
    .single-line-form {
      gap: 0.5rem;
    }
  }
   .rides-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 1.5rem;
    margin-top: 1rem;
  }

  .ride-card {
    background: var(--card-bg);
    border-radius: var(--border-radius);
    padding: 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.05);
    transition: var(--transition);
    display: flex;
    flex-direction: column;
  }

  .ride-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--box-shadow-hover);
  }

  /* Route Header */
  .ride-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1.5rem;
    gap: 1rem;
  }

  .route-container {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    flex-grow: 1;
  }

  .location-pin {
    font-size: 1.2rem;
    color: var(--primary-light);
  }

  .location-pin.from {
    color: var(--success-color);
  }

  .location-pin.to {
    color: var(--primary-light);
  }

  .route-details {
    flex-grow: 1;
  }

  .route-from, .route-to {
    font-weight: 600;
    font-size: 1.1rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .route-arrow {
    color: var(--text-muted);
    margin: 0.25rem 0;
    text-align: center;
  }

  .route-arrow i {
    transform: rotate(90deg);
  }

  /* Status Badge */
  .ride-status {
    padding: 0.35rem 0.75rem;
    border-radius: 50px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .ride-status.available {
    background: rgba(0, 255, 136, 0.1);
    color: var(--success-color);
    border: 1px solid var(--success-color);
  }

  .ride-status.full {
    background: rgba(255, 56, 96, 0.1);
    color: var(--error-color);
    border: 1px solid var(--error-color);
  }

  /* Details Grid */
  .ride-details-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.25rem;
    margin-bottom: 1.5rem;
  }

  .detail-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .detail-icon {
    color: var(--primary-light);
    font-size: 1.1rem;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .detail-label {
    font-size: 0.8rem;
    color: var(--text-muted);
    margin-bottom: 0.15rem;
  }

  .detail-value {
    font-size: 0.95rem;
    font-weight: 500;
  }

  /* Action Button */
  .ride-action {
    width: 100%;
    padding: 0.9rem;
    border-radius: var(--border-radius);
    font-weight: 600;
    border: none;
    cursor: pointer;
    transition: var(--transition);
    margin-top: auto;
  }

  .ride-action.join {
    background: var(--primary-gradient);
    color: var(--text-dark);
  }

  

  .ride-action.disabled {
    background: rgba(255, 255, 255, 0.05);
    color: var(--text-muted);
    cursor: not-allowed;
  }

  /* Responsive Adjustments */
  @media (max-width: 992px) {
    .rides-grid {
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    }
  }

  @media (max-width: 768px) {
    .rides-grid {
      grid-template-columns: 1fr;
    }
    
    .ride-details-grid {
      grid-template-columns: 1fr;
    }
    
    .route-from, .route-to {
      white-space: normal;
    }
  }

  @media (max-width: 480px) {
    .ride-header {
      flex-direction: column;
      align-items: stretch;
    }
    
    .ride-status {
      align-self: flex-end;
    }
  }
  /* Ride Cards Layout */
  .rides-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }

  .ride-card {
    background: var(--card-bg);
    border-radius: 12px;
    padding: 20px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
  }

  .ride-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }

  /* Route Header */
  .route-header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 15px;
  }

  .route-path {
    flex-grow: 1;
  }

  .location {
    display: flex;
    align-items: center;
    margin: 5px 0;
  }

  .location-marker {
    display: inline-block;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin-right: 10px;
    background: #00ff88;
  }

  .to-marker {
    background: #00d8ff;
    border-radius: 0;
    width: 10px;
    height: 10px;
    transform: rotate(45deg);
  }

  .location-text {
    font-weight: 600;
    font-size: 16px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .path-line {
    height: 15px;
    width: 2px;
    background: rgba(255, 255, 255, 0.3);
    margin-left: 5px;
  }

  
  /* Details Grid */
  .details-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 15px;
    margin: 20px 0;
  }

  .detail {
    display: flex;
    flex-direction: column;
  }

  .detail-label {
    font-size: 13px;
    color: rgba(255, 255, 255, 0.6);
    margin-bottom: 5px;
  }

  .detail-value {
    font-size: 15px;
    font-weight: 500;
  }

  /* Action Button */
  .action-btn {
    width: 100%;
    padding: 12px;
    border-radius: 8px;
    font-weight: 600;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .join-btn {
    background: linear-gradient(135deg, #00d8ff, #008cff);
    color: #121212;
  }

  .join-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 140, 255, 0.3);
  }

  .disabled-btn {
    background: rgba(255, 255, 255, 0.05);
    color: rgba(255, 255, 255, 0.6);
    cursor: not-allowed;
  }

  /* Empty State */
  .empty-state {
    text-align: center;
    padding: 40px 20px;
    background: rgba(255, 255, 255, 0.02);
    border-radius: 12px;
    border: 1px dashed rgba(255, 255, 255, 0.1);
  }

  .empty-state h3 {
    font-size: 20px;
    margin-bottom: 10px;
  }

  .empty-state p {
    color: rgba(255, 255, 255, 0.6);
    margin-bottom: 20px;
  }

  .primary-btn {
    display: inline-block;
    padding: 12px 24px;
    background: linear-gradient(135deg, #00d8ff, #008cff);
    color: #121212;
    border-radius: 8px;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .primary-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 140, 255, 0.3);
  }

  /* Responsive Adjustments */
  @media (max-width: 768px) {
    .rides-grid {
      grid-template-columns: 1fr;
    }
    
    .details-grid {
      grid-template-columns: repeat(2, 1fr);
    }
    
    .location-text {
      white-space: normal;
    }
  }

  @media (max-width: 480px) {
    .details-grid {
      grid-template-columns: 1fr;
    }
  }
   .action-buttons {
    display: flex;
    gap: 10px;
    margin-top: 15px;
  }

  .action-btn {
    flex: 1;
    padding: 12px;
    border-radius: 8px;
    font-weight: 600;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .join-btn {
    background: linear-gradient(135deg, #00d8ff, #008cff);
    color: #121212;
  }

  .join-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 140, 255, 0.3);
  }

  .disabled-btn {
    background: rgba(255, 255, 255, 0.05);
    color: rgba(255, 255, 255, 0.6);
    cursor: not-allowed;
  }

  .delete-btn {
    background: rgba(255, 56, 96, 0.1);
    color: #ff3860;
    border: 1px solid #ff3860;
  }

  .delete-btn:hover {
    background: rgba(255, 56, 96, 0.2);
    transform: translateY(-2px);
  }

  .delete-form {
    flex: 1;
    margin: 0;
  }
  .modal-content {
    background: var(--card-bg);
    border-radius: var(--border-radius);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: var(--box-shadow);
    color: var(--text-light);
  }

  .modal-header {
    padding: 1.5rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    position: relative;
  }

  .modal-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
    color: var(--text-light);
  }

  .close-btn {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: transparent;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    color: var(--text-muted);
    transition: var(--transition);
  }

  .close-btn:hover {
    color: var(--primary-light);
    transform: rotate(90deg);
  }

  .close-btn svg {
    width: 1.25rem;
    height: 1.25rem;
  }

  .modal-body {
    padding: 1.5rem;
  }

  .modal-footer {
    padding: 1.5rem;
    border-top: 1px solid rgba(255, 255, 255, 0.05);
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
  }

  /* Form Styling */
  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    color: var(--text-muted);
    font-weight: 500;
  }

  .form-control {
    width: 100%;
    padding: 0.875rem 1rem;
    background: rgba(255, 255, 255, 0.03);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: calc(var(--border-radius) - 2px);
    color: var(--text-light);
    font-size: 1rem;
    transition: var(--transition);
  }

  .form-control:focus {
    outline: none;
    border-color: var(--primary-light);
    box-shadow: 0 0 0 3px rgba(0, 216, 255, 0.1);
    background: rgba(0, 216, 255, 0.03);
  }

  .form-hint {
    font-size: 0.75rem;
    color: var(--text-muted);
    margin-top: 0.5rem;
  }

  /* Ride Summary */
  .ride-summary {
    background: rgba(0, 0, 0, 0.2);
    border-radius: calc(var(--border-radius) - 2px);
    padding: 1rem;
    margin-bottom: 1.5rem;
  }

  .summary-item {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
  }

  .summary-item:last-child {
    border-bottom: none;
  }

  .summary-item.highlight {
    padding: 0.75rem 0;
    margin-top: 0.5rem;
    border-top: 1px solid rgba(0, 216, 255, 0.2);
    border-bottom: 1px solid rgba(0, 216, 255, 0.2);
  }

  .summary-label {
    color: var(--text-muted);
    font-size: 0.875rem;
  }

  .summary-value {
    font-weight: 500;
    color: var(--text-light);
  }

  .summary-item.highlight .summary-value {
    color: var(--primary-light);
    font-weight: 600;
  }

  /* Buttons */
  .btn {
    padding: 0.75rem 1.5rem;
    border-radius: calc(var(--border-radius) - 2px);
    font-weight: 600;
    font-size: 0.875rem;
    transition: var(--transition);
    border: none;
    cursor: pointer;
  }

  .btn-secondary {
    background: rgba(255, 255, 255, 0.05);
    color: var(--text-light);
  }

  .btn-secondary:hover {
    background: rgba(255, 255, 255, 0.1);
  }

  .btn-primary {
    background: var(--primary-gradient);
    color: var(--text-dark);
    position: relative;
    overflow: hidden;
  }

  .btn-primary::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1);
  }

  .btn-primary:hover::after {
    transform: translateX(0);
  }
   .nav-tabs {
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    margin-bottom: 1.5rem;
  }
  
  .nav-link {
    color: var(--text-muted);
    padding: 0.75rem 1.5rem;
    border: none;
    position: relative;
    font-weight: 500;
    transition: var(--transition);
  }
  
  .nav-link:hover {
    color: var(--text-light);
    background: rgba(255, 255, 255, 0.05);
  }
  
  .nav-link.active {
    color: var(--primary-light);
    background: transparent;
    border: none;
  }
  
  .nav-link.active::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 100%;
    height: 2px;
    background: var(--primary-gradient);
  }
  
  .tab-content {
    padding: 0;
  }
  
 
</style>
<br><br>
<div class="container">
  <!-- Header Section with Floating Animation -->
  <div class="header">
    <h1 class="floating">V-RIDE</h1>
    <p>Revolutionizing student transportation through shared rides. Save money, make friends, and reduce your carbon footprint.</p>
  </div>

  <!-- Futuristic Search Form -->

  <!-- Update your search form to ensure all parameters are passed correctly -->
<form action="/vride" method="GET" id="searchForm" class="single-line-form">
  <div class="form-group" style="flex: 2;">
    <input type="text" class="form-control" id="searchFrom" name="from" 
           value="<%= searchParams.from || '' %>" placeholder="Current location" required>
    <div class="invalid-feedback">Please enter a starting location</div>
  </div>
  <div class="form-group" style="flex: 2;">
    <input type="text" class="form-control" id="searchTo" name="to" 
           value="<%= searchParams.to || '' %>" placeholder="Destination" required>
    <div class="invalid-feedback">Please enter a destination</div>
  </div>
  <div class="form-group">
    <input type="date" class="form-control" id="searchDate" name="date" 
           value="<%= searchParams.date || '' %>" required>
    <div class="invalid-feedback">Please select a date</div>
  </div>
  <div class="form-group">
    <input type="time" class="form-control" id="searchTime" name="time" 
           value="<%= searchParams.time || '' %>" placeholder="Any time">
  </div>
  <% if (searchParams.time) { %>
    <div class="form-group form-check">
      <input type="checkbox" class="form-check-input" id="nearbyCheckbox" name="nearby" 
             <%= searchParams.nearby === 'true' ? 'checked' : '' %> value="true">
      <label class="form-check-label" for="nearbyCheckbox">±2 hours</label>
    </div>
  <% } %>
  <div class="form-group" style="flex: 0 0 auto;">
    <button type="submit" class="btn btn-primary">
      Search
    </button>
  </div>
</form>

  <br>

  <!-- Action Cards with Hover Effects -->

      <div class="action-card hover-grow">
        
        <h3>Create a Ride</h3>
        <p>Going somewhere? Offer your ride to others and split the costs. Help build our community while saving money.</p>
        <a href="/vride/new" class="btn btn-primary">Offer Ride</a>
      </div>
<% const ridesToShow = isSearch ? searchResults : recentRides; %>

<br><br>
<div class="tabs-container" style="margin-bottom: 2rem;">
  <ul class="nav nav-tabs" id="ridesTabs" role="tablist">
    <li class="nav-item">
      <a class="nav-link active" id="available-tab" data-toggle="tab" href="#available" role="tab" aria-controls="available" aria-selected="true">
        Available Rides
      </a>
    </li>
    <% if (currentUser) { %>
    <li class="nav-item">
      <a class="nav-link" id="myrides-tab" data-toggle="tab" href="#myrides" role="tab" aria-controls="myrides" aria-selected="false">
        My Rides
      </a>
    </li>
    <% } %>
  </ul>
  
  <div class="tab-content" id="ridesTabsContent">
    <!-- Available Rides Tab -->
    <div class="tab-pane fade show active" id="available" role="tabpanel" aria-labelledby="available-tab">
      <% if (ridesToShow.length > 0) { %>
        <div class="rides-grid">
          <% ridesToShow.forEach(ride => { %>
  <div class="ride-card">
    <div class="route-header">
      <div class="route-path">
        <div class="location from">
          <span class="location-marker"></span>
          <span class="location-text"><%= ride.from %></span>
        </div>
        <div class="path-line"></div>
        <div class="location to">
          <span class="location-marker to-marker"></span>
          <span class="location-text"><%= ride.to %></span>
        </div>
      </div>
      <div class="seats-badge <%= ride.seatsAvailable > 0 ? 'available' : 'full' %>">
        <%= ride.seatsAvailable > 0 ? ride.seatsAvailable + ' Seats' : 'Full' %>
      </div>
    </div>
    
    <div class="details-grid">
      <div class="detail">
        <div class="detail-label">Date</div>
        <div class="detail-value"><%= ride.date.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' }) %></div>
      </div>
      
      <div class="detail">
        <div class="detail-label">Time</div>
        <div class="detail-value"><%= ride.time %></div>
      </div>
      
      <div class="detail">
        <div class="detail-label">Price</div>
        <div class="detail-value">₹<%= ride.perPersonFare %>/person</div>
      </div>
    </div>
    
    <div class="action-buttons">
      <% if (ride.seatsAvailable > 0) { %>
        <% const hasJoined = currentUser && ride.joinedUsers.some(j => j.user.equals(currentUser._id)); %>
        <% if (!hasJoined) { %>
          <button class="action-btn join-btn" data-toggle="modal" data-target="#joinModal-<%= ride._id %>">
            Join Ride
          </button>
        <% } else { %>
          <button class="action-btn disabled-btn">
            Already Joined
          </button>
        <% } %>
      <% } else { %>
        <button class="action-btn disabled-btn">
          Ride Full
        </button>
      <% } %>
      
      <% if (currentUser && (currentUser._id.equals(ride.creator._id) || currentUser.isAdmin)) { %>
        <form class="delete-form" action="/vride/<%= ride._id %>?_method=DELETE" method="POST">
          <button type="submit" class="action-btn delete-btn" onclick="return confirm('Are you sure you want to delete this ride?')">
            Delete
          </button>
        </form>
      <% } %>
    </div>
  </div>
<% }); %>
        </div>
      <% } else { %>
        <div class="empty-state">
          <% if (isSearch) { %>
            <h3>No Rides Found</h3>
            <p>Try adjusting your search criteria.</p>
          <% } else { %>
            <h3>No Rides Available Yet</h3>
            <p>Be the first to create a ride and start sharing trips with others.</p>
          <% } %>
          <a href="/vride/new" class="primary-btn">Create Ride</a>
        </div>
      <% } %>
    </div>
    
    <!-- My Rides Tab (only shown if user is logged in) -->
    <% if (currentUser) { %>
    <div class="tab-pane fade" id="myrides" role="tabpanel" aria-labelledby="myrides-tab">
      <% if (myRides.length > 0) { %>
        <div class="rides-grid">
          <% myRides.forEach(ride => { %>
            <div class="ride-card">
              <!-- Same ride card structure as available rides -->
              <div class="route-header">
                <div class="route-path">
                  <div class="location from">
                    <span class="location-marker"></span>
                    <span class="location-text"><%= ride.from %></span>
                  </div>
                  <div class="path-line"></div>
                  <div class="location to">
                    <span class="location-marker to-marker"></span>
                    <span class="location-text"><%= ride.to %></span>
                  </div>
                </div>
                <div class="seats-badge <%= ride.seatsAvailable > 0 ? 'available' : 'full' %>">
                  <%= ride.seatsAvailable > 0 ? ride.seatsAvailable + ' Seats' : 'Full' %>
                </div>
              </div>
              
              <div class="details-grid">
                <div class="detail">
                  <div class="detail-label">Date</div>
                  <div class="detail-value"><%= ride.date.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' }) %></div>
                </div>
                
                <div class="detail">
                  <div class="detail-label">Time</div>
                  <div class="detail-value"><%= ride.time %></div>
                </div>
                
                <div class="detail">
                  <div class="detail-label">Price</div>
                  <div class="detail-value">₹<%= ride.perPersonFare %>/person</div>
                </div>
              </div>
              
              <div class="action-buttons">
                
                
                <!-- Delete button for ride creator or admin -->
                <% if (currentUser._id.equals(ride.creator._id) || currentUser.isAdmin) { %>
                  <form class="delete-form" action="/vride/<%= ride._id %>?_method=DELETE" method="POST">
                    <button type="submit" class="action-btn delete-btn" onclick="return confirm('Are you sure you want to delete this ride?')">
                      Delete
                    </button>
                  </form>
                <% } %>
                
               
              </div>
            </div>
          <% }); %>
        </div>
      <% } else { %>
        <div class="empty-state">
          <h3>No Rides Found</h3>
          <p>You haven't created or joined any rides yet.</p>
          <a href="/vride/new" class="primary-btn">Create Ride</a>
        </div>
      <% } %>
    </div>
    <% } %>
  </div>
</div>
<!-- Join Ride Modal Template -->
<% ridesToShow.forEach(ride => { %>
<div class="modal fade" id="joinModal-<%= ride._id %>" tabindex="-1" role="dialog" aria-labelledby="joinModalLabel-<%= ride._id %>" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Join Ride to <%= ride.to %></h5>
        <button type="button" class="close-btn" data-dismiss="modal" aria-label="Close">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M18 6L6 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
            <path d="M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </button>
      </div>
      <div class="modal-body">
        <form action="/vride/<%= ride._id %>/join" method="POST">
          <div class="form-group">
            <label for="mobileNumber-<%= ride._id %>">Your Mobile Number</label>
            <input type="tel" class="form-control" id="mobileNumber-<%= ride._id %>" 
                   name="mobileNumber" placeholder="10-digit number" required
                   pattern="[0-9]{10}">
            <div class="form-hint">Will be shared with ride creator for coordination</div>
          </div>
          
          <div class="ride-summary">
            <div class="summary-item">
              <span class="summary-label">From</span>
              <span class="summary-value"><%= ride.from %></span>
            </div>
            <div class="summary-item">
              <span class="summary-label">To</span>
              <span class="summary-value"><%= ride.to %></span>
            </div>
            <div class="summary-item">
              <span class="summary-label">Date</span>
              <span class="summary-value"><%= ride.date.toLocaleDateString() %></span>
            </div>
            <div class="summary-item">
              <span class="summary-label">Time</span>
              <span class="summary-value"><%= ride.time %></span>
            </div>
            <div class="summary-item highlight">
              <span class="summary-label">Fare per person</span>
              <span class="summary-value">₹<%= ride.perPersonFare %></span>
            </div>
          </div>
          
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary">Confirm & Join</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
<% }); %>


<!-- JavaScript Libraries -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
<script src="https://kit.fontawesome.com/your-code-here.js" crossorigin="anonymous"></script>
<!-- Advanced Interactions -->
<script>
// Form validation with smooth feedback
// Update your form validation script
document.getElementById('searchForm').addEventListener('submit', function(e) {
    const from = document.getElementById('searchFrom').value.trim();
    const to = document.getElementById('searchTo').value.trim();
    const date = document.getElementById('searchDate').value;
    
    // Clear previous error highlights
    document.querySelectorAll('.is-invalid').forEach(el => {
        el.classList.remove('is-invalid');
    });
    
    // Remove existing error messages
    const existingErrors = document.querySelectorAll('.invalid-feedback');
    existingErrors.forEach(error => error.remove());
    
    let isValid = true;
    
    // Validate required fields
    if (!from) {
        document.getElementById('searchFrom').classList.add('is-invalid');
        showError('searchFrom', 'Please enter a starting location');
        isValid = false;
    }
    
    if (!to) {
        document.getElementById('searchTo').classList.add('is-invalid');
        showError('searchTo', 'Please enter a destination');
        isValid = false;
    }
    
    if (!date) {
        document.getElementById('searchDate').classList.add('is-invalid');
        showError('searchDate', 'Please select a date');
        isValid = false;
    }
    
    if (!isValid) {
        e.preventDefault();
    }
});

function showError(fieldId, message) {
    const field = document.getElementById(fieldId);
    const errorDiv = document.createElement('div');
    errorDiv.className = 'invalid-feedback';
    errorDiv.textContent = message;
    field.parentNode.appendChild(errorDiv);
}

function animateError(element) {
    element.style.borderColor = 'var(--error-color)';
    element.style.boxShadow = '0 0 0 3px rgba(255, 56, 96, 0.2)';
    element.animate([
        { transform: 'translateX(0)' },
        { transform: 'translateX(-5px)' },
        { transform: 'translateX(5px)' },
        { transform: 'translateX(0)' }
    ], {
        duration: 400,
        iterations: 1
    });
    
    setTimeout(() => {
        element.style.borderColor = '';
        element.style.boxShadow = '';
    }, 2000);
}

// Add floating animation to cards on hover
document.querySelectorAll('.hover-grow').forEach(card => {
    card.addEventListener('mouseenter', () => {
        card.style.transform = 'translateY(-10px) scale(1.02)';
    });
    card.addEventListener('mouseleave', () => {
        card.style.transform = '';
    });
});

// Dynamic background particles (simplified)
function initParticles() {
    const container = document.querySelector('.header');
    const particleCount = 30;
    
    for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.style.position = 'absolute';
        particle.style.width = `${Math.random() * 5 + 2}px`;
        particle.style.height = particle.style.width;
        particle.style.backgroundColor = `rgba(0, 216, 255, ${Math.random() * 0.3 + 0.1})`;
        particle.style.borderRadius = '50%';
        particle.style.top = `${Math.random() * 100}%`;
        particle.style.left = `${Math.random() * 100}%`;
        particle.style.opacity = '0';
        particle.style.transition = `all ${Math.random() * 10 + 10}s linear`;
        container.appendChild(particle);
        
        // Animate particles
        setTimeout(() => {
            particle.style.opacity = '1';
            particle.style.transform = `translate(${Math.random() * 100 - 50}px, ${Math.random() * 100 - 50}px)`;
        }, i * 200);
    }
}
// Mobile number validation for join modal
document.querySelectorAll('form[action*="/join"]').forEach(form => {
    form.addEventListener('submit', function(e) {
        const mobileInput = this.querySelector('input[type="tel"]');
        if (!/^[0-9]{10}$/.test(mobileInput.value)) {
            e.preventDefault();
            mobileInput.classList.add('is-invalid');
            const errorDiv = document.createElement('div');
            errorDiv.className = 'invalid-feedback';
            errorDiv.textContent = 'Please enter a valid 10-digit mobile number';
            mobileInput.parentNode.appendChild(errorDiv);
            animateError(mobileInput);
        }
    });
});

// Initialize after page load
window.addEventListener('load', initParticles);
</script>

<style>
  @keyframes fadeInUp {
    from { opacity: 0; transform: translate(-50%, 20px); }
    to { opacity: 1; transform: translate(-50%, 0); }
  }
  
  @keyframes fadeOutDown {
    from { opacity: 1; transform: translate(-50%, 0); }
    to { opacity: 0; transform: translate(-50%, 20px); }
  }
</style>
