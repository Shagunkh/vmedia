<% layout("/layouts/boilerplate") %>
<br><br><br><br>
<button class="back-btn" onclick="window.location.href='/'">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
      <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
    </svg>
    Back to Home
  </button>
<div class="container">
    
    <header class="header-animate">
        <h1 style="font-size: 5rem;">Previous Year Papers</h1>
        <p>Access and upload previous year question papers</p>
    </header>

    <!-- Search Bar -->
  <div class="cosmic-search-universe">
  <div class="cosmic-nebula-backdrop"></div>
  
  <div class="cosmic-search-container">
    <form id="cosmicSearchForm" class="cosmic-search-form">
      <div class="cosmic-input-constellation">
        <input 
          type="text" 
          name="search" 
          placeholder="Search By Subject..." 
          value="<%= search %>"
          class="cosmic-input-field"
          autocomplete="off"
          aria-label="Cosmic Search"
        >
        
        <div class="cosmic-input-effects">
          <!-- Animated border elements -->
          <div class="cosmic-border-orbit cosmic-border-1"></div>
          <div class="cosmic-border-orbit cosmic-border-2"></div>
          <div class="cosmic-border-orbit cosmic-border-3"></div>
          
          <!-- Particle field -->
          <div class="cosmic-particle-field">
            <div class="particle p1"></div>
            <div class="particle p2"></div>
            <div class="particle p3"></div>
            <div class="particle p4"></div>
            <div class="particle p5"></div>
          </div>
          
          <!-- Glow effects -->
          <div class="cosmic-input-aurora"></div>
          <div class="cosmic-input-pulse"></div>
        </div>
        
        <button type="submit" class="cosmic-search-button" aria-label="Initiate Search">
          <span class="search-icon-wrapper">
            <svg class="cosmic-search-icon" viewBox="0 0 24 24">
              <path class="search-path" d="M15.5 14h-.79l-.28-.27a6.5 6.5 0 0 0 1.48-5.34c-.47-2.78-2.79-5-5.59-5.34a6.505 6.505 0 0 0-7.27 7.27c.34 2.8 2.56 5.12 5.34 5.59a6.5 6.5 0 0 0 5.34-1.48l.27.28v.79l4.25 4.25c.41.41 1.08.41 1.49 0 .41-.41.41-1.08 0-1.49L15.5 14zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
            </svg>
          </span>
          <span class="search-ripple-effect"></span>
          <span class="search-energy-pulse"></span>
        </button>
      </div>
      
      <% if (search) { %>
        <button type="button" class="cosmic-clear-button" onclick="window.location.href='/api/pyq'" aria-label="Clear Search">
          <div class="clear-icon-container" style="color: white;">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
    <path d="M18 6L6 18M6 6l12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>
          </div>
          <div class="clear-ripple"></div>
        </button>
      <% } %>
    </form>
    
    <div class="cosmic-search-helper">
      

     
<div class="exam-type-filters">
    <div class="filter-buttons">
        <button class="filter-btn active" data-exam-type="all">All</button>
        <button class="filter-btn" data-exam-type="FAT">FAT</button>
        <button class="filter-btn" data-exam-type="CAT1">CAT 1</button>
        <button class="filter-btn" data-exam-type="CAT2">CAT 2</button>
        <button class="filter-btn" data-exam-type="Quiz">Quiz</button>
    </div>
</div>
    </div>
  </div>
</div>

    <div class="pyq-form hidden" id="pyqForm">
        <div class="form-header">
            <h2>Upload New PYQ</h2>
            <div class="form-header-decoration"></div>
        </div>
        <form id="uploadForm" action="/api/pyq/upload" method="POST" enctype="multipart/form-data">
            <div class="form-group">
                <label for="subjectName">Subject Name</label>
                <input type="text" id="subjectName" name="subject" required class="input-glow">
            </div>
            <div class="form-group">
                <label for="examType">Exam Type</label>
                <select id="examType" name="examType" required class="input-glow">
                    <option value="">Select exam type</option>
                    <option value="CAT1">CAT 1</option>
                    <option value="CAT2">CAT 2</option>
                    <option value="FAT">FAT</option>
                    <option value="Quiz">Quiz</option>
                    <option value="Other">Other</option>
                </select>
            </div>
            <div class="form-group">
                <label for="paperSlots">Slots (use + for multiple slots)</label>
                <input type="text" id="paperSlots" name="slots" placeholder="e.g., A1+TA1" required class="input-glow">
            </div>
            <div class="form-group">
                <label for="pageCount">Number of Pages</label>
                <input type="number" id="pageCount" name="pageCount" min="1" required class="input-glow">
                <button type="button" id="generateUploads" class="btn btn-generate">
                    <span class="btn-text">Generate Upload Fields</span>
                    <span class="btn-icon">üîÑ</span>
                </button>
            </div>
            <div id="pageUploads" class="page-uploads-container"></div>
            <button type="submit" class="btn submit-btn">
                <span class="btn-text">Submit</span>
                <span class="btn-icon">üöÄ</span>
            </button>
        </form>
    </div>
    
    <button id="addPyqBtn" class="cosmic-fab" aria-label="Add New PYQ">
    <span class="fab-icon">+</span>
    <span class="fab-tooltip">Create New PYQ</span>
    <div class="fab-pulse"></div>
    <div class="fab-aura"></div>
    <div class="fab-particle"></div>
</button>
    
    <div class="pyq-grid" id="pyqGrid">
        <% if (pyqs.length === 0) { %>
            <p class="no-results">
                <% if (search) { %>
                    No PYQs found matching "<%= search %>". Try a different search term.
                <% } else { %>
                    No PYQs found. Upload some to get started.
                <% } %>
            </p>
        <% } else { %>
            <% pyqs.forEach((pyq, index) => { %>
                <div class="pyq-card">
                    <div class="pyq-card-content">
                        <div class="pyq-card-bg"></div>
                        <h3><%= pyq.subject %></h3>
                        <p><strong>Exam Type:</strong> <%= pyq.examType %></p>
                        <p><strong>Slots:</strong> <%= pyq.slots %></p>
                        <p><strong>Pages:</strong> <%= pyq.pages ? pyq.pages.length : 1 %></p>
                        <p><strong>Uploaded:</strong> <%= new Date(pyq.uploadedAt).toLocaleDateString() %></p>
                    </div>
                    <div class="pyq-card-actions">
                        <button class="btn view-btn" data-pages='<%= JSON.stringify(pyq.pages || [{fileUrl: pyq.fileUrl, pageNumber: 1}]) %>'>
                            <span class="btn-text">View PYQ</span>
                            <span class="btn-icon">üëÅÔ∏è</span>
                        </button>
                        <!-- Inside the pyq-card div, after the view button -->
<% if (user && (user._id.toString() === '6832465f11b7eb971def0812' || user._id.toString() === '6832f0c9ec306d1c95a07b87')) { %>
    <button class="btn delete-btn" data-id="<%= pyq._id %>">
        <span class="btn-text">Delete</span>
        <span class="btn-icon">üóëÔ∏è</span>
    </button>
<% } %>
                    </div>
                </div>
            <% }); %>
        <% } %>
    </div>
</div>

<!-- PDF Viewer Modal -->
<div id="pdfModal" class="modal hidden">
    <div class="modal-content">
        <span class="close-modal">&times;</span>
        <div id="pdfViewer" class="pdf-viewer-container"></div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // DOM Elements
    const addPyqBtn = document.getElementById('addPyqBtn');
    const pyqForm = document.getElementById('pyqForm');
    const uploadForm = document.getElementById('uploadForm');
    const generateUploads = document.getElementById('generateUploads');
    const pageUploads = document.getElementById('pageUploads');
    const pdfModal = document.getElementById('pdfModal');
    const pdfViewer = document.getElementById('pdfViewer');
    const closeModal = document.querySelector('.close-modal');
    const errorMessage = document.getElementById('errorMessage');
    const searchForm = document.getElementById('searchForm');
    const searchInput = document.querySelector('.search-input');

    // Toggle form visibility with animation
    addPyqBtn.addEventListener('click', () => {
        pyqForm.classList.toggle('hidden');
        if (!pyqForm.classList.contains('hidden')) {
            pyqForm.style.animation = 'slideDown 0.5s ease-out';
            uploadForm.reset();
            pageUploads.innerHTML = '';
        } else {
            pyqForm.style.animation = 'slideUp 0.3s ease-in';
        }
    });

    // Generate upload fields based on page count
    generateUploads.addEventListener('click', function() {
        const pageCount = parseInt(document.getElementById('pageCount').value);
        if (isNaN(pageCount) || pageCount < 1) {
            showError('Please enter a valid number of pages (minimum 1)');
            return;
        }
        
        generateUploads.disabled = true;
        generateUploads.querySelector('.btn-text').textContent = 'Generating...';
        
        setTimeout(() => {
            pageUploads.innerHTML = '';
            
            for (let i = 1; i <= pageCount; i++) {
                const uploadContainer = document.createElement('div');
                uploadContainer.className = 'page-upload-item';
                uploadContainer.style.animation = `fadeIn 0.3s ease-out ${i * 0.1}s forwards`;
                uploadContainer.style.opacity = '0';
                
                uploadContainer.innerHTML = `
                    <label for="page${i}">Page ${i}</label>
                    <input type="file" id="page${i}" name="pages" accept="image/*,.pdf" required>
                    <div class="upload-preview" id="preview${i}"></div>
                `;
                pageUploads.appendChild(uploadContainer);
                
                // Add preview functionality
                const fileInput = uploadContainer.querySelector('input[type="file"]');
                fileInput.addEventListener('change', function(e) {
                    const preview = document.getElementById(`preview${i}`);
                    preview.innerHTML = '';
                    
                    if (fileInput.files && fileInput.files[0]) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            const previewElement = fileInput.files[0].type.includes('pdf') 
                                ? `<embed src="${e.target.result}" width="100%" height="200px" type="application/pdf">`
                                : `<img src="${e.target.result}" alt="Page ${i} preview" class="preview-image">`;
                            preview.innerHTML = previewElement;
                            preview.style.animation = 'popIn 0.3s ease-out';
                        };
                        reader.readAsDataURL(fileInput.files[0]);
                    }
                });
            }
            
            generateUploads.disabled = false;
            generateUploads.querySelector('.btn-text').textContent = 'Generate Upload Fields';
        }, 300);
    });

     const filterButtons = document.querySelectorAll('.filter-btn');
    const pyqCards = document.querySelectorAll('.pyq-card');
    
    filterButtons.forEach(button => {
        button.addEventListener('click', () => {
            // Update active button
            filterButtons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
            
            const examType = button.dataset.examType;
            
            // Filter cards
            pyqCards.forEach(card => {
                if (examType === 'all') {
                    card.style.display = 'block';
                } else {
                    const cardExamType = card.querySelector('p:nth-of-type(1)').textContent.split(': ')[1];
                    card.style.display = cardExamType === examType ? 'block' : 'none';
                }
            });
            
            // Show message if no results
            const visibleCards = document.querySelectorAll('.pyq-card[style*="display: block"]');
            const noResults = document.querySelector('.no-results');
            
            if (visibleCards.length === 0 && noResults) {
                noResults.textContent = `No PYQs found for ${examType} exams.`;
                noResults.style.display = 'block';
            } else if (noResults) {
                noResults.style.display = 'none';
            }
        });
    });
    // View PDF modal
    function viewPDF(pages) {
        try {
            const formattedPages = Array.isArray(pages) ? pages : [pages];
            pdfViewer.innerHTML = '';
            const scrollContainer = document.createElement('div');
            scrollContainer.className = 'pdf-scroll-container';
            
            formattedPages.forEach((page, index) => {
                const pageContainer = document.createElement('div');
                pageContainer.className = 'pdf-page';
                pageContainer.innerHTML = `
                    <div class="page-header">Page ${index + 1}</div>
                    <div class="page-content">
                        ${page.fileUrl.includes('.pdf') 
                            ? `<embed src="${page.fileUrl}" width="100%" height="800px" type="application/pdf">`
                            : `<img src="${page.fileUrl}" alt="Page ${index + 1}" class="page-image">`}
                    </div>
                `;
                scrollContainer.appendChild(pageContainer);
            });
            
            pdfViewer.appendChild(scrollContainer);
            pdfModal.classList.remove('hidden');
            document.body.style.overflow = 'hidden';
        } catch (error) {
            console.error('Error displaying PDF:', error);
            showError('Could not display the PDF. Please try again.');
        }
    }

    // Close modal
    function closePDFModal() {
        pdfModal.classList.add('hidden');
        document.body.style.overflow = 'auto';
        pdfViewer.innerHTML = '';
    }

    closeModal.addEventListener('click', closePDFModal);
    window.addEventListener('click', function(event) {
        if (event.target === pdfModal) {
            closePDFModal();
        }
    });

    // Add event listeners to all view buttons
    document.querySelectorAll('.view-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            viewPDF(JSON.parse(this.dataset.pages));
        });
    });

    // Form submission
    uploadForm.addEventListener('submit', function(e) {
        const submitBtn = uploadForm.querySelector('button[type="submit"]');
        submitBtn.disabled = true;
        submitBtn.querySelector('.btn-text').textContent = 'Uploading...';
        submitBtn.querySelector('.btn-icon').textContent = '‚è≥';
    });
    // Add this to your script section
// Delete PYQ functionality
document.querySelectorAll('.delete-btn').forEach(btn => {
    btn.addEventListener('click', async function() {
        const pyqId = this.dataset.id;
        const confirmDelete = confirm('Are you sure you want to delete this PYQ? This action cannot be undone.');
        
        if (confirmDelete) {
            try {
                const response = await fetch(`/api/pyq/${pyqId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    alert('PYQ deleted successfully');
                    window.location.reload();
                } else {
                    throw new Error(result.error || 'Failed to delete PYQ');
                }
            } catch (error) {
                console.error('Delete error:', error);
                alert(error.message);
            }
        }
    });
});

    // Error/success messages
    function showError(message) {
        errorMessage.textContent = message;
        errorMessage.classList.add('error');
        errorMessage.classList.remove('success');
        setTimeout(() => errorMessage.textContent = '', 5000);
    }

    function showSuccess(message) {
        errorMessage.textContent = message;
        errorMessage.classList.add('success');
        errorMessage.classList.remove('error');
        setTimeout(() => errorMessage.textContent = '', 5000);
    }

    // Make viewPDF available globally
    window.viewPDF = viewPDF;
});
</script>

<style>
/* Base Styles */
:root {
    --primary-gradient: linear-gradient(90deg, #00d8ff, #008cff);
    --primary-gradient-hover: linear-gradient(90deg, #00c4e8, #0078d4);
    --dark-bg: #121212;
    --darker-bg: #0a0a0a;
    --card-bg: #1e1e1e;
    --text-primary: #ffffff;
    --text-secondary: #b0b0b0;
    --accent-blue: #00d8ff;
    --accent-pink: #ff2d75;
    --success-green: #00e676;
    --error-red: #ff3d71;
    --border-radius: 12px;
    --box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
body {
    background-color: var(--dark-bg);
    color: var(--text-primary);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.6;
    overflow: auto;
    scroll-behavior: smooth;
}

/* Hide scrollbar for WebKit browsers (Chrome, Safari, Edge) */
body::-webkit-scrollbar {
    display: none;
}

/* Hide scrollbar for Firefox */
body {
    scrollbar-width: none; /* Firefox */
}
/* Updated Input Field Styles */
.search-container {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
    align-items: center;
}

/* Make search inputs wider */
#searchInput.input-glow {
    width: 500px; /* Increased from 400px */
    max-width: 100%;
    padding: 1rem 1.5rem; /* More padding */
    font-size: 1.1rem; /* Slightly larger text */
}

#slotFilter.input-glow {
    width: 300px; /* Wider slot filter */
    max-width: 100%;
    padding: 1rem 1.5rem;
    font-size: 1.1rem;
}

/* Form input fields */
.form-group input[type="text"],
.form-group input[type="number"],
.form-group select {
    width: 100%;
    padding: 1rem 1.5rem;
    font-size: 1.1rem;
    margin-bottom: 1rem;
}

/* Page upload fields */
.page-upload-item input[type="file"] {
    width: 100%;
    padding: 1rem;
    font-size: 1rem;
}

/* Responsive adjustments */
@media (max-width: 1200px) {
    #searchInput.input-glow {
        width: 400px;
    }
    #slotFilter.input-glow {
        width: 250px;
    }
}

@media (max-width: 992px) {
    .search-container {
        flex-direction: column;
        align-items: stretch;
    }
    
    #searchInput.input-glow,
    #slotFilter.input-glow {
        width: 100%;
    }
}

@media (max-width: 768px) {
    .container {
        padding: 1rem;
    }
    
    #searchInput.input-glow,
    #slotFilter.input-glow {
        padding: 0.9rem 1.2rem;
        font-size: 1rem;
    }
}

/* Enhanced input focus effects */
.input-glow:focus {
    box-shadow: 0 0 0 3px rgba(0, 216, 255, 0.3);
    border-color: var(--accent-blue);
    outline: none;
}



.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
}

.hidden {
    display: none !important;
}

/* Animations */
@keyframes slideDown {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideUp {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(-20px);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes popIn {
    0% {
        transform: scale(0.8);
        opacity: 0;
    }
    70% {
        transform: scale(1.05);
        opacity: 1;
    }
    100% {
        transform: scale(1);
    }
}

@keyframes floatUp {
    from {
        transform: translateY(10px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-5px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(5px);
    }
}

@keyframes modalFadeIn {
    from {
        opacity: 0;
        transform: scale(0.9) translateY(20px);
    }
    to {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

@keyframes modalFadeOut {
    from {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
    to {
        opacity: 0;
        transform: scale(0.9) translateY(20px);
    }
}

@keyframes cardHover {
    from {
        transform: translateY(0);
        box-shadow: var(--box-shadow);
    }
    to {
        transform: translateY(-5px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
    }
}

@keyframes spinner {
    to {
        transform: rotate(360deg);
    }
}

/* Header Styles */
.header-animate {
    text-align: center;
    margin-bottom: 3rem;
    animation: fadeIn 0.8s ease-out;
}
#examType {
    color: white;
    background-color: #0a0a0a;
}
.header-animate h1 {
    font-size: 4.0rem;
    margin-bottom: 0.5rem;
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    display: inline-block;
}
/* Add this to your style section */
.exam-type-filters {
    margin: 2rem 0;
    text-align: center;
}

.filter-buttons {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 10px;
}

.filter-btn {
    padding: 8px 16px;
    border: 2px solid #4a6bff;
    background: transparent;
    color: white;
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
    position: relative;
    overflow: hidden;
}

.filter-btn:hover {
    background: rgba(74, 107, 255, 0.2);
}

.filter-btn.active {
    background: #4a6bff;
    box-shadow: 0 0 10px rgba(74, 107, 255, 0.5);
}

.filter-btn::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transform: translateX(-100%);
    transition: 0.3s;
}

.filter-btn:hover::after {
    transform: translateX(100%);
}


.header-animate p {
    color: var(--text-secondary);
    font-size: 1.1rem;
}

/* Search Section */
.search-section {
    background: var(--darker-bg);
    padding: 2rem;
    border-radius: var(--border-radius);
    margin-bottom: 2rem;
    box-shadow: var(--box-shadow);
    transition: var(--transition);
}

.search-section:hover {
    transform: translateY(-3px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
}

.search-container {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
}

.search-container input {
    flex: 1;
}

.input-glow {
    background: rgba(255, 255, 255, 0.08);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: var(--text-primary);
    transition: var(--transition);
}

.input-glow:focus {
    outline: none;
    border-color: var(--accent-blue);
    box-shadow: 0 0 0 2px rgba(0, 216, 255, 0.2);
}

/* Button Styles */
.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.8rem 1.5rem;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    transition: var(--transition);
    position: relative;
    overflow: hidden;
}

.btn::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.1);
    opacity: 0;
    transition: var(--transition);
}

.btn:hover::after {
    opacity: 1;
}

.btn-text {
    position: relative;
    z-index: 1;
}

.btn-icon {
    position: relative;
    z-index: 1;
    transition: var(--transition);
}

.btn:hover .btn-icon {
    transform: scale(1.2);
}

.btn-search {
    background: var(--primary-gradient);
    color: white;
    min-width: 120px;
}

.btn-search:hover {
    background: var(--primary-gradient-hover);
    transform: translateY(-2px);
}

.btn-add {
    background: var(--accent-pink);
    color: white;
    min-width: 120px;
}

.btn-add:hover {
    background: #ff1a6b;
    transform: translateY(-2px);
}

.btn-generate {
    background: rgba(0, 216, 255, 0.1);
    color: var(--accent-blue);
    border: 1px solid var(--accent-blue);
    margin-top: 0.5rem;
}

.btn-generate:hover {
    background: rgba(0, 216, 255, 0.2);
    transform: translateY(-2px);
}

.submit-btn {
    background: var(--primary-gradient);
    color: white;
    width: 100%;
    margin-top: 1rem;
}

.submit-btn:hover {
    background: var(--primary-gradient-hover);
    transform: translateY(-2px);
}

.view-btn {
    background: rgba(0, 216, 255, 0.1);
    color: var(--accent-blue);
    border: 1px solid var(--accent-blue);
    width: 100%;
}

.view-btn:hover {
    background: rgba(0, 216, 255, 0.2);
    transform: translateY(-2px);
}




/* Page Uploads */
.page-uploads-container {
    margin-top: 1.5rem;
    display: grid;
    gap: 1rem;
}

.page-upload-item {
    background: rgba(255, 255, 255, 0.05);
    padding: 1.5rem;
    border-radius: var(--border-radius);
    border: 1px dashed rgba(255, 255, 255, 0.1);
    transition: var(--transition);
}

.page-upload-item:hover {
    border-color: var(--accent-blue);
    background: rgba(0, 216, 255, 0.05);
}

.upload-preview {
    margin-top: 1rem;
    border-radius: 8px;
    overflow: hidden;
    background: rgba(0, 0, 0, 0.3);
}

.preview-image {
    width: 100%;
    height: auto;
    display: block;
    border-radius: 4px;
}



/* Modal Styles */
.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.9);
    z-index: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
    backdrop-filter: blur(5px);
}

.modal-content {
    background: var(--darker-bg);
    border-radius: var(--border-radius);
    width: 90%;
    max-width: 900px;
    max-height: 90vh;
    overflow: hidden;
    position: relative;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.close-modal {
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 1.8rem;
    color: var(--text-secondary);
    cursor: pointer;
    z-index: 1001;
    transition: var(--transition);
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
}

.close-modal:hover {
    color: white;
    background: rgba(255, 255, 255, 0.2);
    transform: rotate(90deg);
}

.pdf-viewer-container {
    width: 100%;
    height: 80vh;
    overflow-y: auto;
    padding: 2rem;
}

.pdf-scroll-container {
    width: 100%;
}

.pdf-page {
    margin-bottom: 2rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.page-header {
    font-size: 1.1rem;
    margin-bottom: 1rem;
    color: var(--accent-blue);
    display: flex;
    align-items: center;
}

.page-header::before {
    content: 'üìÑ';
    margin-right: 0.5rem;
}

.page-content {
    width: 100%;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 8px;
    overflow: hidden;
}

.page-image {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 0 auto;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
}

/* Messages */
.error-message {
    padding: 1rem;
    margin-top: 1rem;
    border-radius: 8px;
    display: none;
    animation: floatUp 0.3s ease-out;
}

.error-message.error {
    background: rgba(255, 61, 113, 0.1);
    color: var(--error-red);
    border-left: 4px solid var(--error-red);
    display: block;
}

.error-message.success {
    background: rgba(0, 230, 118, 0.1);
    color: var(--success-green);
    border-left: 4px solid var(--success-green);
    display: block;
}

.loading {
    text-align: center;
    padding: 2rem;
    color: var(--text-secondary);
    grid-column: 1 / -1;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
}

.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(0, 216, 255, 0.2);
    border-top-color: var(--accent-blue);
    border-radius: 50%;
    animation: spinner 1s linear infinite;
}

.no-results {
    text-align: center;
    padding: 2rem;
    color: var(--text-secondary);
    grid-column: 1 / -1;
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--border-radius);
}

/* Responsive */
@media (max-width: 768px) {
    .container {
        padding: 1rem;
    }
    
    .search-container {
        flex-direction: column;
    }
    
    .pyq-grid {
        grid-template-columns: 1fr;
    }
    
    .modal-content {
        width: 95%;
        padding: 1rem;
    }
    
    .pdf-viewer-container {
        padding: 1rem;
    }
    
    .header-animate h1 {
        font-size: 2rem;
    }
}

@media (max-width: 480px) {
    .btn {
        padding: 0.7rem 1rem;
        font-size: 0.9rem;
    }
    
    .btn-icon {
        display: none;
    }
    .header-animate{
        margin-left: -1rem;
    }
}
:root {
    --primary-gradient: linear-gradient(90deg, #00d8ff, #008cff);
    --primary-gradient-hover: linear-gradient(90deg, #00c4e8, #0078d4);
    --dark-bg: linear-gradient(135deg, #121212 0%, #0a0a0a 100%);
    --darker-bg: rgba(10, 10, 10, 0.8);
    --card-bg: rgba(30, 30, 30, 0.6);
    --text-primary: #ffffff;
    --text-secondary: rgba(255, 255, 255, 0.7);
    --accent-blue: #00d8ff;
    --accent-pink: #ff2d75;
    --success-green: #00e676;
    --error-red: #ff3d71;
    --border-radius: 8px;
    --box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    background: var(--dark-bg);
    color: var(--text-primary);
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    line-height: 1.6;
    min-height: 100vh;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
}

.hidden {
    display: none !important;
}

/* Animations */
@keyframes slideDown {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideUp {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(-20px);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes popIn {
    0% {
        transform: scale(0.8);
        opacity: 0;
    }
    70% {
        transform: scale(1.05);
        opacity: 1;
    }
    100% {
        transform: scale(1);
    }
}

@keyframes floatUp {
    from {
        transform: translateY(10px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-5px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(5px);
    }
}

@keyframes modalFadeIn {
    from {
        opacity: 0;
        transform: scale(0.9) translateY(20px);
    }
    to {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

@keyframes modalFadeOut {
    from {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
    to {
        opacity: 0;
        transform: scale(0.9) translateY(20px);
    }
}

@keyframes cardHover {
    from {
        transform: translateY(0);
        box-shadow: var(--box-shadow);
    }
    to {
        transform: translateY(-5px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
    }
}

@keyframes spinner {
    to {
        transform: rotate(360deg);
    }
}

@keyframes particles {
    0% {
        transform: scale(0);
        opacity: 1;
    }
    80% {
        opacity: 1;
    }
    100% {
        transform: scale(1.5);
        opacity: 0;
    }
}

@keyframes float {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
    }
}

/* Header Styles */
.header-animate {
    text-align: center;
    margin-bottom: 3rem;
    animation: fadeIn 0.8s ease-out;
}

.header-animate h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    display: inline-block;
    text-shadow: 0 2px 10px rgba(0, 216, 255, 0.3);
}

.header-animate p {
    color: var(--text-secondary);
    font-size: 1.1rem;
    max-width: 600px;
    margin: 0 auto;
}

/* Search Section */
.search-section {
    background: var(--darker-bg);
    padding: 2rem;
    border-radius: var(--border-radius);
    margin-bottom: 2rem;
    box-shadow: var(--box-shadow);
    transition: var(--transition);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.search-section:hover {
    transform: translateY(-3px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
}

.search-container {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
}

.search-container .input-wrapper {
    flex: 1;
}

/* Input Styles */
.input-wrapper {
    position: relative;
    margin-bottom: 1.5rem;
}


.input-glow:focus ~ .input-decoration {
    width: 100%;
}

/* Button Styles */
.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.8rem 1.5rem;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    transition: var(--transition);
    position: relative;
    overflow: hidden;
    min-height: 50px;
}

.btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(rgba(255, 255, 255, 0.1), transparent);
    opacity: 0;
    transition: var(--transition);
}

.btn:hover::before {
    opacity: 1;
}

.btn-text {
    position: relative;
    z-index: 1;
}

.btn-icon {
    position: relative;
    z-index: 1;
    transition: var(--transition);
}

.btn:hover .btn-icon {
    transform: scale(1.2);
}

.btn-particles {
    position: absolute;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle, rgba(0, 216, 255, 0.4) 0%, transparent 70%);
    opacity: 0;
    pointer-events: none;
}

.btn-search {
    background: var(--primary-gradient);
    color: white;
    min-width: 120px;
}

.btn-search:hover {
    background: var(--primary-gradient-hover);
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 216, 255, 0.3);
}

.btn-add {
    background: var(--accent-pink);
    color: white;
    min-width: 120px;
}

.btn-add:hover {
    background: #ff1a6b;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(255, 45, 117, 0.3);
}

.btn-generate {
    background: rgba(0, 216, 255, 0.1);
    color: var(--accent-blue);
    border: 1px solid var(--accent-blue);
    margin-top: 0.5rem;
}

.btn-generate:hover {
    background: rgba(0, 216, 255, 0.2);
    transform: translateY(-2px);
}

.submit-btn {
    background: var(--primary-gradient);
    color: white;
    width: 100%;
    margin-top: 1rem;
}

.submit-btn:hover {
    background: var(--primary-gradient-hover);
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 216, 255, 0.3);
}

.view-btn {
    background: rgba(0, 216, 255, 0.1);
    color: var(--accent-blue);
    border: 1px solid var(--accent-blue);
    width: 100%;
}

.view-btn:hover {
    background: rgba(0, 216, 255, 0.2);
    transform: translateY(-2px);
}

/* Form Styles */
.pyq-form {
    background: var(--darker-bg);
    padding: 2rem;
    border-radius: var(--border-radius);
    margin-bottom: 2rem;
    box-shadow: var(--box-shadow);
    transition: var(--transition);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
}



/* Page Uploads */
.page-uploads-container {
    margin-top: 1.5rem;
    display: grid;
    gap: 1rem;
}

.page-upload-item {
    background: rgba(255, 255, 255, 0.05);
    padding: 1.5rem;
    border-radius: var(--border-radius);
    border: 1px dashed rgba(255, 255, 255, 0.1);
    transition: var(--transition);
}

.page-upload-item:hover {
    border-color: var(--accent-blue);
    background: rgba(0, 216, 255, 0.05);
}

.upload-preview {
    margin-top: 1rem;
    border-radius: 8px;
    overflow: hidden;
    background: rgba(0, 0, 0, 0.3);
}

.preview-image {
    width: 100%;
    height: auto;
    display: block;
    border-radius: 4px;
}


:root {
    --primary-gradient: linear-gradient(135deg, #00d8ff, #008cff, #0062ff);
    --primary-gradient-hover: linear-gradient(135deg, #00c4e8, #0078d4, #0050c0);
    --dark-bg: #121212;
    --darker-bg: #0a0a0a;
    --card-bg: #1e1e1e;
    --text-primary: #ffffff;
    --text-secondary: #b0b0b0;
    --accent-blue: #00d8ff;
    --accent-pink: #ff2d75;
    --success-green: #00e676;
    --error-red: #ff3d71;
    --border-radius: 16px;
    --box-shadow: 0 12px 32px rgba(0, 0, 0, 0.4);
    --transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
}

/* PYQ Grid with Advanced Animations */
.pyq-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 3rem;
    perspective: 1000px;
}

.pyq-card {
    background: black;
    border-radius: var(--border-radius);
    padding: 2rem;
    transition: var(--transition);
    position: relative;
    overflow: hidden;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
    box-shadow: var(--box-shadow);
    border: 1px solid rgba(255, 255, 255, 0.05);
    transform-style: preserve-3d;
}

/* Staggered animations for cards */
.pyq-card:nth-child(1) { animation-delay: 0.1s; }
.pyq-card:nth-child(2) { animation-delay: 0.2s; }
.pyq-card:nth-child(3) { animation-delay: 0.3s; }
.pyq-card:nth-child(4) { animation-delay: 0.4s; }
.pyq-card:nth-child(5) { animation-delay: 0.5s; }
.pyq-card:nth-child(n+6) { animation-delay: 0.6s; }

@keyframes fadeInUp {
    to {
        opacity: 1;
        transform: translateY(0) rotateX(0);
    }
}

.pyq-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--primary-gradient);
    opacity: 0;
    transition: var(--transition);
    z-index: 0;
}

.pyq-card::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: var(--primary-gradient);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.6s cubic-bezier(0.65, 0, 0.35, 1);
    z-index: 2;
}

.pyq-card:hover {
    transform: translateY(-8px) rotateX(5deg);
    box-shadow: 0 20px 40px rgba(0, 140, 255, 0.3);
    border-color: rgba(0, 216, 255, 0.3);
}

.pyq-card:hover::before {
    opacity: 0.1;
    animation: gradientPulse 6s ease infinite;
}

.pyq-card:hover::after {
    transform: scaleX(1);
}

.pyq-card-content {
    position: relative;
    z-index: 1;
    transition: var(--transition);
}

.pyq-card:hover .pyq-card-content {
    transform: translateY(-5px);
}

.pyq-card h3 {
    font-size: 1.4rem;
    margin-bottom: 1.2rem;
    color: white;
    position: relative;
    display: inline-block;
    transition: var(--transition);
}

.pyq-card h3::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--accent-blue);
    transition: width 0.6s cubic-bezier(0.65, 0, 0.35, 1);
}

.pyq-card:hover h3::after {
    width: 100%;
}

.pyq-card p {
    color: var(--text-secondary);
    margin-bottom: 0.8rem;
    font-size: 0.95rem;
    transition: var(--transition);
}

.pyq-card:hover p {
    color: rgba(255, 255, 255, 0.8);
}

.pyq-card-actions {
    margin-top: 1.8rem;
    display: flex;
    gap: 1rem;
    position: relative;
    z-index: 1;
}

/* Floating Animation */
@keyframes float {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
    }
}

/* Gradient Pulse Effect */
@keyframes gradientPulse {
    0%, 100% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
}

/* Button Hover Effects */
.view-btn {
    position: relative;
    overflow: hidden;
    border: 2px solid var(--accent-blue);
    background: transparent;
    color: var(--accent-blue);
    padding: 0.8rem 1.5rem;
    border-radius: 50px;
    font-weight: 600;
    transition: var(--transition);
    z-index: 1;
}

.view-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--primary-gradient);
    z-index: -1;
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.6s cubic-bezier(0.65, 0, 0.35, 1);
    opacity: 0;
}

#examtype {
    color:#0a0a0a;
}
.view-btn:hover {
    color: white;
    border-color: transparent;
    box-shadow: 0 0 20px rgba(0, 216, 255, 0.4);
    letter-spacing: 1px;
}

.view-btn:hover::before {
    transform: scaleX(1);
    transform-origin: left;
    opacity: 1;
}

/* Glow Effect on Hover */
.pyq-card:hover {
    box-shadow: 0 0 30px rgba(0, 216, 255, 0.3), 
                0 15px 30px rgba(0, 0, 0, 0.4);
}

/* 3D Tilt Effect */
.pyq-card {
    transform-style: preserve-3d;
    transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.pyq-card:hover {
    transform: perspective(1000px) rotateX(5deg) rotateY(2deg) translateY(-10px);
}

/* Particle Effect on Hover */
.pyq-card .particles {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    z-index: 0;
    opacity: 0;
    transition: opacity 0.4s ease;
}

.pyq-card:hover .particles {
    opacity: 0.6;
}



/* Particle CSS */
.particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: var(--accent-blue);
    border-radius: 50%;
    filter: blur(1px);
    animation: floatParticle 4s ease-in-out infinite;
}

.particle:nth-child(1) {
    animation-delay: 0s;
    width: 6px;
    height: 6px;
}
.particle:nth-child(2) {
    animation-delay: 1s;
    background: var(--accent-pink);
}
.particle:nth-child(3) {
    animation-delay: 2s;
    width: 3px;
    height: 3px;
}

@keyframes floatParticle {
    0%, 100% {
        transform: translate(0, 0);
    }
    25% {
        transform: translate(10px, -10px);
    }
    50% {
        transform: translate(-5px, 5px);
    }
    75% {
        transform: translate(5px, -5px);
    }
}
 .back-btn {
      padding: 0.8rem 1.5rem;
      background: black;
      color: var(--primary);
      font-weight: 600;
      border: 1px solid var(--primary);
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.3s ease;
      margin: 1rem auto;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      margin-left: 1rem;
      margin-top: -1rem;
    }

    .back-btn:hover {
      background: rgba(0, 208, 255, 0.3);
      transform: translateX(-5px);
    }
    
    :root {
    --primary: #00d8ff;       /* Updated to match gradient start */
    --secondary: #008cff;     /* Updated to match gradient end */
    --dark-bg: #0a0e17;      /* Darkened background for better contrast */
    --darker-bg: #050a14;    /* Even darker for accents */
    --card-bg: #1a2238;      /* Blue-tinged dark cards */
    --accent: #47c2ff;       /* Kept for contrast */
    --success: #50fa7b;      /* Kept for success messages */
    --text: #e2f3ff;         /* Light blue-tinged text */
    --text-muted: #5d7a9d;   /* Muted blue-gray */
  }

  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

  body {
    font-family: 'Poppins', sans-serif;
    background: var(--dark-bg);
    color: var(--text);
    min-height: 100vh;
    padding: 2rem;
    background-image: 
      radial-gradient(circle at 25% 25%, rgba(0, 216, 255, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 75% 75%, rgba(0, 140, 255, 0.1) 0%, transparent 50%);
    background-attachment: fixed;
  }
  #searchInput.input-glow{
    width: 400px;
  }
  
  :root {
    --cosmic-primary: #00d8ff;
    --cosmic-secondary: #008cff;
    --cosmic-dark: #050a14;
    --cosmic-darker: #020510;
    --cosmic-card-bg: rgba(10, 20, 40, 0.6);
    --cosmic-text: #e6f7ff;
    --cosmic-text-muted: rgba(138, 157, 184, 0.7);
    --cosmic-accent: #ff2d75;
    --cosmic-border: rgba(0, 216, 255, 0.2);
    --cosmic-border-radius: 16px;
    --cosmic-box-shadow: 0 12px 32px rgba(0, 0, 0, 0.4);
    --cosmic-transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}
:root {
    --cosmic-primary: #00d8ff;
    --cosmic-secondary: #008cff;
    --cosmic-dark: #050a14;
    --cosmic-darker: #020510;
    --cosmic-card-bg: rgba(10, 20, 40, 0.6);
    --cosmic-text: #e6f7ff;
    --cosmic-text-muted: rgba(138, 157, 184, 0.7);
    --cosmic-accent: #ff2d75;
    --cosmic-border: rgba(0, 216, 255, 0.2);
    --cosmic-border-radius: 16px;
    --cosmic-box-shadow: 0 12px 32px rgba(0, 0, 0, 0.4);
    --cosmic-transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}
/* Cosmic Search Universe */
.cosmic-search-universe {
  position: relative;
  width: 100%;
  max-width: 1400px;
  margin: 3rem auto;
  padding: 4rem 2rem;
  perspective: 2000px;
  transform-style: preserve-3d;
}

.cosmic-nebula-backdrop {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 20% 30%, rgba(138, 43, 226, 0.15) 0%, transparent 30%),
    radial-gradient(circle at 80% 70%, rgba(0, 191, 255, 0.15) 0%, transparent 30%),
    radial-gradient(circle at 50% 20%, rgba(255, 215, 0, 0.1) 0%, transparent 25%);
  filter: blur(40px);
  opacity: 0.7;
  z-index: -1;
  animation: nebulaPulse 30s infinite alternate;
}

/* Search Container */
.cosmic-search-container {
  position: relative;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

.cosmic-search-form {
  position: relative;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Cosmic Input Constellation */
.cosmic-input-constellation {
  position: relative;
  width: 100%;
  height: 90px;
  display: flex;
  align-items: center;
  transform-style: preserve-3d;
}

.cosmic-input-field {
  width: 100%;
  height: 100%;
  padding: 0 30px;
  font-size: 22px;
  font-weight: 300;
  color: rgba(255, 255, 255, 0.9);
  background: rgba(15, 23, 42, 0.5);
  border: none;
  border-radius: 50px;
  backdrop-filter: blur(15px);
  box-shadow: 
    0 0 0 1px rgba(255, 255, 255, 0.05),
    0 10px 40px -10px rgba(0, 0, 0, 0.4),
    inset 0 4px 30px rgba(255, 255, 255, 0.02);
  transition: all 0.6s cubic-bezier(0.16, 1, 0.3, 1);
  z-index: 2;
}

.cosmic-input-field::placeholder {
  color: rgba(255, 255, 255, 0.4);
  font-weight: 300;
}

.cosmic-input-field:focus {
  outline: none;
  box-shadow: 
    0 0 0 2px rgba(138, 180, 248, 0.3),
    0 15px 50px -10px rgba(0, 0, 0, 0.5),
    inset 0 4px 40px rgba(255, 255, 255, 0.03);
  transform: translateY(-2px);
}

/* Cosmic Input Effects */
.cosmic-input-effects {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  overflow: hidden;
  border-radius: 50px;
  z-index: 1;
}

/* Animated Border Orbits */
.cosmic-border-orbit {
  position: absolute;
  border-radius: 50px;
  background: linear-gradient(90deg, transparent, var(--cosmic-accent), transparent);
  opacity: 0;
  transition: all 0.8s ease;
}

.cosmic-border-1 {
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(90deg, transparent, var(--cosmic-primary), transparent);
  animation: orbitFlow 6s linear infinite;
}

.cosmic-border-2 {
  top: -3px;
  left: -3px;
  right: -3px;
  bottom: -3px;
  background: linear-gradient(90deg, transparent, var(--cosmic-secondary), transparent);
  animation: orbitFlow 8s linear infinite reverse;
  animation-delay: 1s;
}

.cosmic-border-3 {
  top: -4px;
  left: -4px;
  right: -4px;
  bottom: -4px;
  background: linear-gradient(90deg, transparent, var(--cosmic-accent), transparent);
  animation: orbitFlow 10s linear infinite;
  animation-delay: 2s;
}

.cosmic-input-field:focus ~ .cosmic-input-effects .cosmic-border-1,
.cosmic-input-field:focus ~ .cosmic-input-effects .cosmic-border-2,
.cosmic-input-field:focus ~ .cosmic-input-effects .cosmic-border-3 {
  opacity: 0.6;
}

/* Particle Field */
.cosmic-particle-field {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.particle {
  position: absolute;
  border-radius: 50%;
  background: white;
  filter: blur(1px);
  opacity: 0;
  animation: floatParticle 15s infinite linear;
}

.p1 { width: 2px; height: 2px; top: 20%; left: 15%; animation-delay: 0s; }
.p2 { width: 3px; height: 3px; top: 60%; left: 30%; animation-delay: 3s; }
.p3 { width: 1px; height: 1px; top: 40%; left: 70%; animation-delay: 6s; }
.p4 { width: 2px; height: 2px; top: 80%; left: 45%; animation-delay: 9s; }
.p5 { width: 1px; height: 1px; top: 30%; left: 85%; animation-delay: 12s; }

.cosmic-input-field:focus ~ .cosmic-input-effects .particle {
  opacity: 0.15;
}

/* Aurora Effect */
.cosmic-input-aurora {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, rgba(138, 180, 248, 0.1) 0%, transparent 70%);
  opacity: 0;
  transition: opacity 0.8s ease;
}

.cosmic-input-field:focus ~ .cosmic-input-effects .cosmic-input-aurora {
  opacity: 1;
}

/* Pulse Effect */
.cosmic-input-pulse {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, rgba(138, 180, 248, 0.2) 0%, transparent 70%);
  transform: translate(-50%, -50%) scale(0.5);
  opacity: 0;
  transition: all 1.2s ease;
}

.cosmic-input-field:focus ~ .cosmic-input-effects .cosmic-input-pulse {
  animation: inputPulse 4s infinite;
}

/* Search Button */
.cosmic-search-button {
  position: absolute;
  right: 10px;
  width: 70px;
  height: 70px;
  background: linear-gradient(135deg, var(--cosmic-primary), var(--cosmic-secondary));
  border: none;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.6s cubic-bezier(0.16, 1, 0.3, 1);
  z-index: 3;
  overflow: hidden;
}

.search-icon-wrapper {
  position: relative;
  z-index: 2;
}

.cosmic-search-icon {
  width: 28px;
  height: 28px;
}

.search-path {
  fill: white;
  stroke: white;
  stroke-width: 0.5;
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  animation: drawSearchIcon 1.2s 0.3s ease-out forwards;
}

.search-ripple-effect {
  position: absolute;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  transform: scale(0);
  opacity: 0;
}

.search-energy-pulse {
  position: absolute;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.4) 0%, transparent 70%);
  opacity: 0;
}

.cosmic-search-button:hover {
  transform: translateY(-3px) scale(1.05);
  box-shadow: 0 10px 30px rgba(0, 216, 255, 0.5);
}

.cosmic-search-button:hover .search-ripple-effect {
  animation: buttonRipple 1.5s infinite;
}

.cosmic-search-button:hover .search-energy-pulse {
  animation: energyPulse 2s infinite;
}

/* Clear Button */
.cosmic-clear-button {
  position: absolute;
  right: 90px;
  width: 50px;
  height: 50px;
  background: rgba(0, 0, 0, 0.1);
  border: none;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.4s ease;
  z-index: 3;
  overflow: hidden;
}

.clear-icon-container {
  position: relative;
  z-index: 2;
}

.clear-path {
  fill: rgba(255, 255, 255, 0.7);
  transition: all 0.4s ease;
}

.clear-ripple {
  position: absolute;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  transform: scale(0);
  opacity: 0;
}

.cosmic-clear-button:hover {
  background: rgba(255, 255, 255, 0.15);
  transform: scale(1.1);
}

.cosmic-clear-button:hover .clear-path {
  fill: white;
}

.cosmic-clear-button:hover .clear-ripple {
  animation: buttonRipple 1s;
}

/* Search Helper */
.cosmic-search-helper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: 15px;
  padding: 0 30px;
  color: rgba(255, 255, 255, 0.5);
  font-size: 14px;
  font-weight: 300;
  letter-spacing: 0.5px;
}

.helper-animation {
  display: flex;
  gap: 6px;
}

.helper-dot {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: var(--cosmic-primary);
  opacity: 0.6;
  animation: helperPulse 1.5s infinite ease-in-out;
}

.hd2 { animation-delay: 0.2s; }
.hd3 { animation-delay: 0.4s; }

/* Animations */
@keyframes nebulaPulse {
  0% { transform: scale(1); opacity: 0.7; }
  50% { transform: scale(1.05); opacity: 0.9; }
  100% { transform: scale(1); opacity: 0.7; }
}

@keyframes orbitFlow {
  0% { background-position: -100% 0; }
  100% { background-position: 200% 0; }
}

@keyframes floatParticle {
  0% { transform: translate(0, 0); opacity: 0; }
  10% { opacity: 0.15; }
  90% { opacity: 0.15; }
  100% { transform: translate(100px, -50px); opacity: 0; }
}

@keyframes inputPulse {
  0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }
  50% { opacity: 0.4; }
  100% { transform: translate(-50%, -50%) scale(1.5); opacity: 0; }
}

@keyframes drawSearchIcon {
  to { stroke-dashoffset: 0; }
}

@keyframes buttonRipple {
  0% { transform: scale(0.8); opacity: 1; }
  100% { transform: scale(1.5); opacity: 0; }
}

@keyframes energyPulse {
  0% { transform: scale(0.8); opacity: 0; }
  50% { transform: scale(1.2); opacity: 0.3; }
  100% { transform: scale(1.5); opacity: 0; }
}

@keyframes helperPulse {
  0%, 100% { transform: scale(0.8); opacity: 0.3; }
  50% { transform: scale(1.2); opacity: 1; }
}

/* Responsive Design */
@media (max-width: 1200px) {
  .cosmic-search-universe {
    padding: 3rem 1.5rem;
  }
  .cosmic-input-field {
    font-size: 20px;
    height: 80px;
  }
  .cosmic-search-button {
    width: 60px;
    height: 60px;
    right: 8px;
  }
  .cosmic-clear-button {
    right: 78px;
  }
}

@media (max-width: 768px) {
  .cosmic-search-universe {
    padding: 2rem 1rem;
  }
  .cosmic-input-field {
    font-size: 18px;
    height: 70px;
    padding: 0 20px;
  }
  .cosmic-search-button {
    width: 50px;
    height: 50px;
  }
  .cosmic-clear-button {
    right: 68px;
    width: 40px;
    height: 40px;
  }
  .cosmic-search-helper {
    padding: 0 20px;
  }
}

/* Cosmic FAB Styles */
.cosmic-fab {
    --fab-primary: #8ab4f8;
    --fab-secondary: #c084fc;
    --fab-accent: #ec4899;
    --fab-glow: 0 0 20px rgba(138, 180, 248, 0.6);
    
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    width: 64px;
    height: 64px;
    background: linear-gradient(90deg, #00d8ff, #008cff);
    border: none;
    border-radius: 50%;
    color: white;
    font-size: 2rem;
    font-weight: 300;
    cursor: pointer;
    box-shadow: 
        0 4px 30px rgba(0, 0, 0, 0.3),
        var(--fab-glow);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    z-index: 1000;
    overflow: visible;
    transform-style: preserve-3d;
    perspective: 1000px;
}

.cosmic-fab:hover {
    transform: translateY(-5px) scale(1.1) rotate(0.1turn);
    box-shadow: 
        0 8px 40px rgba(0, 0, 0, 0.4),
        0 0 30px rgba(138, 180, 248, 0.8);
    animation: fabFloat 3s ease-in-out infinite;
}

.fab-icon {
    position: relative;
    z-index: 3;
    transition: all 0.4s ease;
    transform: rotate(0);
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.7);
}

.cosmic-fab:hover .fab-icon {
    transform: rotate(135deg) scale(1.2);
    text-shadow: 0 0 15px white;
}

.fab-tooltip {
    position: absolute;
    right: 80px;
    background: rgba(10, 20, 40, 0.9);
    color: white;
    padding: 0.8rem 1.2rem;
    border-radius: 8px;
    font-size: 0.9rem;
    font-weight: 500;
    opacity: 0;
    pointer-events: none;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    white-space: nowrap;
    transform: translateX(10px);
    backdrop-filter: blur(5px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.cosmic-fab:hover .fab-tooltip {
    opacity: 1;
    transform: translateX(0);
    transition-delay: 0.1s;
}

.fab-pulse {
    position: absolute;
    width: 100%;
    height: 100%;
    background: inherit;
    border-radius: 50%;
    animation: pulse 2s infinite;
    opacity: 0.6;
    z-index: 1;
}

.fab-aura {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: radial-gradient(circle at center, 
        rgba(138, 180, 248, 0.4) 0%, 
        rgba(192, 132, 252, 0.2) 50%, 
        transparent 70%);
    z-index: 0;
    opacity: 0;
    transition: opacity 0.6s ease, transform 0.6s ease;
    transform: scale(0.8);
}

.cosmic-fab:hover .fab-aura {
    opacity: 1;
    transform: scale(1.5);
}

.fab-particle {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-image: 
        radial-gradient(1px 1px at 30% 30%, white 1px, transparent 2px),
        radial-gradient(1px 1px at 70% 70%, white 1px, transparent 2px),
        radial-gradient(1px 1px at 20% 80%, white 1px, transparent 2px),
        radial-gradient(1px 1px at 80% 20%, white 1px, transparent 2px);
    background-size: 100% 100%;
    opacity: 0;
    z-index: 0;
    transition: opacity 0.6s ease;
    animation: particleOrbit 20s linear infinite;
}

.cosmic-fab:hover .fab-particle {
    opacity: 0.3;
}

/* Animations */
@keyframes pulse {
    0% {
        transform: scale(0.8);
        opacity: 0.6;
    }
    70% {
        transform: scale(1.4);
        opacity: 0;
    }
    100% {
        transform: scale(0.8);
        opacity: 0;
    }
}

@keyframes fabFloat {
    0%, 100% {
        transform: translateY(-5px) scale(1.1) rotate(0.1turn);
    }
    50% {
        transform: translateY(-10px) scale(1.12) rotate(0.12turn);
    }
}

@keyframes particleOrbit {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

/* Responsive */
@media (max-width: 768px) {
    .cosmic-fab {
        width: 56px;
        height: 56px;
        font-size: 1.8rem;
        bottom: 1.5rem;
        right: 1.5rem;
    }
    
    .fab-tooltip {
        right: 70px;
        font-size: 0.8rem;
        padding: 0.6rem 1rem;
    }
}
/* PYQ Form Container */
.pyq-form {
    background: rgba(15, 23, 42, 0.8);
    backdrop-filter: blur(12px);
    border-radius: 24px;
    padding: 2.5rem;
    margin: 2rem 0;
    border: 1px solid rgba(138, 180, 248, 0.2);
    box-shadow: 
        0 10px 40px rgba(0, 0, 0, 0.3),
        inset 0 4px 30px rgba(255, 255, 255, 0.02);
    transition: all 0.6s cubic-bezier(0.16, 1, 0.3, 1);
}

.pyq-form:hover {
    box-shadow: 
        0 15px 50px rgba(0, 0, 0, 0.4),
        inset 0 4px 30px rgba(255, 255, 255, 0.05);
    transform: translateY(-3px);
}

/* Form Header */
.form-header {
    position: relative;
    margin-bottom: 2.5rem;
    padding-bottom: 1rem;
}

.form-header h2 {
    font-size: 2rem;
    margin-bottom: 0.5rem;
    background: linear-gradient(90deg, #00d8ff, #008cff);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-weight: 600;
}

.form-header-decoration {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 60px;
    height: 4px;
    background: linear-gradient(90deg, #00d8ff, #008cff);
    border-radius: 4px;
}

/* Form Group Styling */
.form-group {
    position: relative;
    margin-bottom: 2rem;
    z-index: 1;
}

.form-group label {
    display: block;
    margin-bottom: 0.8rem;
    color: rgba(230, 247, 255, 0.9);
    font-size: 1rem;
    font-weight: 500;
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
}

/* Input Field Styling */
.input-glow {
    width: 100%;
    padding: 1.2rem 1.5rem;
    font-size: 1rem;
    color: rgba(230, 247, 255, 0.95);
    background: rgba(10, 20, 40, 0.5);
    border: 1px solid rgba(138, 180, 248, 0.2);
    border-radius: 12px;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    outline: none;
    box-shadow: 
        inset 0 2px 10px rgba(0, 0, 0, 0.2),
        0 2px 20px rgba(0, 0, 0, 0.1);
}

.input-glow::placeholder {
    color: rgba(230, 247, 255, 0.4);
}

.input-glow:focus {
    border-color: rgba(138, 180, 248, 0.6);
    box-shadow: 
        inset 0 2px 15px rgba(0, 0, 0, 0.3),
        0 0 0 2px rgba(138, 180, 248, 0.3),
        0 5px 30px rgba(0, 216, 255, 0.2);
    background: rgba(10, 20, 40, 0.7);
}

/* Select Dropdown Styling */
#examType {
    appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%238ab4f8'%3e%3cpath d='M7 10l5 5 5-5z'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 1.5rem center;
    background-size: 1rem;
    padding-right: 3.5rem;
    color: white !important;
}

#examType option {
    background: rgba(10, 20, 40, 0.9);
    color: white;
    padding: 1rem;
}

/* Generate Button Styling */
.btn-generate {
    background: rgba(138, 180, 248, 0.1);
    color: #8ab4f8;
    border: 1px solid rgba(138, 180, 248, 0.3);
    padding: 1rem 1.5rem;
    margin-top: 0.5rem;
    border-radius: 12px;
    font-weight: 500;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
}

.btn-generate:hover {
    background: rgba(138, 180, 248, 0.2);
    transform: translateY(-2px);
    box-shadow: 0 5px 20px rgba(138, 180, 248, 0.2);
}

.btn-generate .btn-icon {
    transition: transform 0.4s ease;
}

.btn-generate:hover .btn-icon {
    transform: rotate(180deg);
}

/* Page Uploads Container */
.page-uploads-container {
    margin-top: 2rem;
    display: grid;
    gap: 1.5rem;
}

.page-upload-item {
    background: rgba(10, 20, 40, 0.5);
    border: 1px dashed rgba(138, 180, 248, 0.3);
    border-radius: 12px;
    padding: 1.5rem;
    transition: all 0.4s ease;
    opacity: 0;
    transform: translateY(10px);
    animation: fadeInUp 0.5s ease-out forwards;
}

@keyframes fadeInUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.page-upload-item:hover {
    border-color: rgba(138, 180, 248, 0.6);
    background: rgba(10, 20, 40, 0.7);
}

.page-upload-item label {
    display: block;
    margin-bottom: 0.8rem;
    color: rgba(230, 247, 255, 0.9);
    font-size: 0.95rem;
}

.page-upload-item input[type="file"] {
    width: 100%;
    padding: 0.8rem;
    background: rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(138, 180, 248, 0.2);
    border-radius: 8px;
    color: white;
}

.upload-preview {
    margin-top: 1rem;
    border-radius: 8px;
    overflow: hidden;
    max-height: 300px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0, 0, 0, 0.2);
}

.preview-image {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    border-radius: 4px;
}

/* Submit Button */
.submit-btn {
    width: 100%;
    padding: 1.2rem;
    margin-top: 2rem;
    background: linear-gradient(90deg, #00d8ff, #008cff);
    color: white;
    border: none;
    border-radius: 12px;
    font-size: 1.1rem;
    font-weight: 600;
    letter-spacing: 0.5px;
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: relative;
    overflow: hidden;
}

.submit-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, rgba(255, 255, 255, 0.1), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s ease;
}

.submit-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 30px rgba(138, 180, 248, 0.4);
}

.submit-btn:hover::before {
    transform: translateX(100%);
}

.submit-btn .btn-icon {
    transition: transform 0.4s ease;
}

.submit-btn:hover .btn-icon {
    transform: translateX(5px);
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .pyq-form {
        padding: 1.5rem;
    }
    
    .form-header h2 {
        font-size: 1.5rem;
    }
    
    .input-glow {
        padding: 1rem;
    }
    
    #examType {
        background-position: right 1rem center;
    }
}
.delete-btn {
    background: rgba(255, 61, 113, 0.1);
    color: var(--error-red);
    border: 1px solid var(--error-red);
    width: 100%;
    margin-top: 0.5rem;
}

.delete-btn:hover {
    background: rgba(255, 61, 113, 0.2);
    transform: translateY(-2px);
}
</style>
