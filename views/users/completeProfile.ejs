<% layout("/layouts/boilerplate") %>

<style>
     :root {
    --primary-accent: #00d8ff;
    --secondary-accent: #008cff;
    --dark-bg: #0a0a12;
    --darker-bg: #05050a;
    --card-bg: rgba(20, 25, 40, 0.8);
    --text-primary: #f0f8ff;
    --text-secondary: #a0b8d0;
    --success: #00ffaa;
    --error: #ff4d7d;
    --neon-glow: 0 0 15px rgba(0, 216, 255, 0.6);
    --deep-shadow: 0 20px 50px rgba(0, 0, 0, 0.6);
  }

  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
  @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600&display=swap');

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  body {
    font-family: 'Poppins', sans-serif;
    background: 
      linear-gradient(135deg, var(--dark-bg) 0%, var(--darker-bg) 100%),
      radial-gradient(circle at 20% 30%, rgba(0, 216, 255, 0.15) 0%, transparent 25%),
      radial-gradient(circle at 80% 70%, rgba(0, 140, 255, 0.15) 0%, transparent 25%);
    color: var(--text-primary);
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    overflow-x: hidden;
    position: relative;
  }

  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      radial-gradient(circle at 20% 40%, rgba(0, 216, 255, 0.05) 0%, transparent 20%),
      radial-gradient(circle at 80% 60%, rgba(0, 140, 255, 0.05) 0%, transparent 20%);
    z-index: -1;
    animation: cosmicPulse 15s infinite alternate;
  }

  @keyframes cosmicPulse {
    0% { opacity: 0.8; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.02); }
    100% { opacity: 0.8; transform: scale(1); }
  }

  .row {
    background: var(--card-bg);
    border-radius: 20px;
    box-shadow: 
      var(--deep-shadow),
      inset 0 0 0 1px rgba(255, 255, 255, 0.05),
      0 0 0 2px rgba(0, 216, 255, 0.1);
    backdrop-filter: blur(10px);
    overflow: hidden;
    margin: 1.5rem auto;
    padding: 2.5rem;
    max-width: 800px;
    border: 1px solid rgba(0, 216, 255, 0.1);
    transform: translateY(0);
    transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: relative;
    z-index: 2;
    animation: 
      fadeIn 0.8s ease-out,
      floating 8s ease-in-out infinite;
    max-height: 590px;
    min-height: 480px;
  }

  .mb-3 {
    margin-bottom: 1.5rem;
  }

  .btn-success {
    margin-top: 1rem;
  }

  @keyframes floating {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
  }

  .row:hover {
    transform: translateY(-10px) scale(1.01);
    box-shadow: 
      0 25px 60px rgba(0, 0, 0, 0.8),
      inset 0 0 0 1px rgba(255, 255, 255, 0.1),
      0 0 0 4px rgba(0, 216, 255, 0.2);
  }

  .row::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: 
      linear-gradient(
        to bottom right,
        transparent 45%,
        rgba(0, 216, 255, 0.05) 50%,
        transparent 55%
      );
    animation: shine 8s infinite;
    pointer-events: none;
  }

  @keyframes shine {
    0% { transform: translate(-30%, -30%) rotate(0deg); }
    100% { transform: translate(30%, 30%) rotate(360deg); }
  }

  h1 {
    color: var(--text-primary);
    font-weight: 700;
    text-align: center;
    margin-bottom: 2rem;
    font-size: 2.5rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-family: 'Orbitron', sans-serif;
    background: linear-gradient(90deg, var(--primary-accent), var(--secondary-accent));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    text-shadow: var(--neon-glow);
    animation: 
      textGlow 3s infinite alternate,
      textFloat 5s ease-in-out infinite;
  }

  @keyframes textGlow {
    0% { text-shadow: 0 0 10px rgba(0, 216, 255, 0.5); }
    100% { text-shadow: 0 0 20px rgba(0, 216, 255, 0.8), 0 0 30px rgba(0, 140, 255, 0.5); }
  }

  @keyframes textFloat {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
  }

  h1::after {
    content: '';
    position: absolute;
    bottom: -15px;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 3px;
    background: linear-gradient(90deg, var(--primary-accent), var(--secondary-accent));
    border-radius: 3px;
    animation: 
      expandLine 0.8s ease-out forwards,
      pulseUnderline 3s infinite 0.8s;
  }

  @keyframes pulseUnderline {
    0%, 100% { opacity: 1; width: 100px; }
    50% { opacity: 0.7; width: 120px; }
  }

  .form-label {
    font-weight: 500;
    color: var(--text-secondary);
    margin-bottom: 0.8rem;
    display: block;
    transition: all 0.4s ease;
    font-size: 1.1rem;
    letter-spacing: 0.5px;
    margin-left: -2rem;
  }

  .form-control {
    background: rgba(10, 15, 30, 0.6);
    border: 1px solid rgba(0, 216, 255, 0.2);
    border-radius: 12px;
    padding: 15px 20px;
   
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    width: 100%;
    margin-bottom: 5px;
    font-size: 1rem;
    box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.3);
    position: relative;
    z-index: 1;
    color: white;
    width: 230px;
    margin-left: -2.9rem;
  }

  .form-control::placeholder {
    color: rgba(160, 184, 208, 0.5);
  }

  .form-control:focus {
    outline: none;
    border-color: var(--primary-accent);
    box-shadow: 
      0 0 0 3px rgba(0, 198, 255, 0.3),
      inset 0 2px 15px rgba(0, 0, 0, 0.4);
    background: rgba(0, 198, 255, 0.05);
    transform: translateY(-2px);
    color: white;
  }

  .form-control:valid {
    border-color: var(--success);
    background: rgba(0, 255, 170, 0.05);
  }

  .valid-feedback {
    color: var(--success);
    font-size: 0.9rem;
    margin-top: 0.5rem;
    display: none;
    text-shadow: 0 0 5px rgba(0, 255, 170, 0.3);
    animation: fadeIn 0.5s ease;
  }

  .form-control:valid + .valid-feedback {
    display: block;
  }

  .btn-success {
    background: linear-gradient(135deg, var(--primary-accent), var(--secondary-accent));
    border: none;
    border-radius: 12px;
    padding: 16px 30px;
    font-weight: 600;
    letter-spacing: 1px;
    color: #111;
    width: 100%;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: relative;
    overflow: hidden;
    font-size: 1.1rem;
    text-transform: uppercase;
    box-shadow: 
      0 5px 20px rgba(0, 198, 255, 0.4),
      0 0 0 1px rgba(0, 216, 255, 0.3);
    z-index: 1;
    margin-top: 1.5rem;
  }

  .btn-success:hover {
    transform: translateY(-5px) scale(1.02);
    box-shadow: 
      0 10px 30px rgba(0, 198, 255, 0.6),
      0 0 0 2px rgba(0, 216, 255, 0.4);
    color: #000;
  }

  .btn-success:active {
    transform: translateY(-2px);
  }

  .btn-success::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transition: 0.6s;
    z-index: -1;
  }

  .btn-success:hover::before {
    left: 100%;
  }

  .btn-success::after {
    content: '';
    position: absolute;
    top: -150%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      to bottom right,
      transparent 45%,
      rgba(255, 255, 255, 0.2) 50%,
      transparent 55%
    );
    animation: shine 4s infinite 1s;
    pointer-events: none;
    z-index: -1;
  }

  .mb-3 {
    position: relative;
    margin-bottom: 2rem;
  }

  .mb-3::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 100%;
    height: 1px;
    background: linear-gradient(90deg, var(--primary-accent), transparent);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.4s ease;
  }

  .mb-3:focus-within::after {
    transform: scaleX(1);
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes expandLine {
    from { width: 0; }
    to { width: 100px; }
  }

  @media (max-width: 768px) {
    body {
      padding: 1rem;
    }
    
    .row {
      margin: 1rem;
      padding: 2rem;
      border-radius: 15px;
    }
    
    h1 {
      font-size: 2rem;
    }
    
    .form-control {
      padding: 12px 15px;
    }
    
    .btn-success {
      padding: 14px 20px;
    }
  }

  @media (max-width: 480px) {
    .row {
      padding: 1.5rem;
    }
    
    h1 {
      font-size: 1.8rem;
    }
    
    .form-label {
      font-size: 1rem;
    }
  }

  .alexa {
    background: transparent !important;
  }

  .form-control:focus {
    animation: inputGlow 1.5s infinite alternate;
  }

  @keyframes inputGlow {
    0% { box-shadow: 0 0 0 3px rgba(0, 198, 255, 0.3); }
    100% { box-shadow: 0 0 0 5px rgba(0, 198, 255, 0.5); }
  }

  /* Login-specific adjustments */
  .row {
    max-height: 450px;
    min-height: 430px;
  }

  h1 {
    font-size: 2rem;
    margin-bottom: 1.5rem;
  }

  .form-label {
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }

  .form-control {
    padding: 12px 15px;
    font-size: 0.95rem;
    margin-bottom: 3px;
  }

  .mb-3 {
    margin-bottom: 1.2rem;
  }

  .btn-success {
    padding: 14px 25px;
    font-size: 1rem;
    margin-top: 0.8rem;
  }

  .valid-feedback {
    font-size: 0.8rem;
  }
   input:-webkit-autofill,
  input:-webkit-autofill:hover, 
  input:-webkit-autofill:focus, 
  input:-webkit-autofill:active {
      -webkit-text-fill-color: var(--text-primary) !important;
      -webkit-box-shadow: 0 0 0 1000px rgba(10, 15, 30, 0.6) inset !important;
      transition: background-color 5000s ease-in-out 0s;
      caret-color: var(--text-primary);
      border: 1px solid rgba(0, 216, 255, 0.2) !important;
  }

  input:-moz-autofill,
  input:-moz-autofill:hover, 
  input:-moz-autofill:focus, 
  input:-moz-autofill:active {
      -moz-text-fill-color: var(--text-primary) !important;
      -moz-box-shadow: 0 0 0 1000px rgba(10, 15, 30, 0.6) inset !important;
      caret-color: var(--text-primary);
      border: 1px solid rgba(0, 216, 255, 0.2) !important;
  }
  /* Add these styles to your existing CSS */
  .form-select {
    background: rgba(10, 15, 30, 0.6) !important;
    border: 1px solid rgba(0, 216, 255, 0.2) !important;
    color: white !important;
    padding: 12px 15px;
    border-radius: 12px;
    width: 230px;
    margin-left: -2.9rem;
    margin-bottom: 5px;
    font-size: 0.95rem;
    box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.3);
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }
  
  .form-select:focus {
    outline: none;
    border-color: var(--primary-accent);
    box-shadow: 
      0 0 0 3px rgba(0, 198, 255, 0.3),
      inset 0 2px 15px rgba(0, 0, 0, 0.4);
    background: rgba(0, 198, 255, 0.05);
    transform: translateY(-2px);
    color: white;
    animation: inputGlow 1.5s infinite alternate;
  }
  
  .form-select option {
    background: var(--darker-bg);
  }

  /* Login-specific adjustments */
  .row {
    max-height: 450px;
    min-height: 430px;
  }

  h1 {
    font-size: 2rem;
    margin-bottom: 1.5rem;
  }

  .form-label {
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }

  .form-control {
    padding: 12px 15px;
    font-size: 0.95rem;
    margin-bottom: 3px;
  }

  .mb-3 {
    margin-bottom: 1.2rem;
  }

  .btn-success {
    padding: 14px 25px;
    font-size: 1rem;
    margin-top: 0.8rem;
  }

  .valid-feedback {
    font-size: 0.8rem;
  }
</style>

<div class="row mt-3 alexa">
  <div class="col-6 offset-3">
    <h1>Complete Your Profile</h1>
    
    
    <form action="/users/complete-profile" method="POST">
      <div class="mb-3">
        <label for="gender" class="form-label">Gender</label>
        <select name="gender" id="gender" class="form-select" required>
          <option value="" disabled selected>Select your gender</option>
          <option value="male">Male</option>
          <option value="female">Female</option>
          <option value="non-binary">Non-binary</option>
          <option value="prefer-not-to-say">Prefer not to say</option>
          <option value="other">Other</option>
        </select>
      </div>

      <div class="mb-3">
        <label for="collegeYear" class="form-label">College Year</label>
        <select name="collegeYear" id="collegeYear" class="form-select" required>
          <option value="" disabled selected>Select your year</option>
          <option value="1">First Year</option>
          <option value="2">Second Year</option>
          <option value="3">Third Year</option>
          <option value="4">Fourth Year</option>
        </select>
      </div>

      <button class="btn btn-success">Submit</button>
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Add input focus effects
    const selects = document.querySelectorAll('.form-select');
    selects.forEach(select => {
      select.addEventListener('focus', function() {
        this.parentNode.querySelector('.form-label').style.color = 'var(--primary-accent)';
      });
      
      select.addEventListener('blur', function() {
        if (this.value === '') {
          this.parentNode.querySelector('.form-label').style.color = 'var(--text-secondary)';
        }
      });
    });
  });
</script>